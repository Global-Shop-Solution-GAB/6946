Program.Sub.ScreenSU.Start
Gui.frmInventoryReportingDashboard..Create(BaseForm)
Gui.frmInventoryReportingDashboard..Caption("Inventory Reporting Dashboard")
Gui.frmInventoryReportingDashboard..Size(1029,678)
Gui.frmInventoryReportingDashboard..MinX(0)
Gui.frmInventoryReportingDashboard..MinY(0)
Gui.frmInventoryReportingDashboard..Position(0,0)
Gui.frmInventoryReportingDashboard..AlwaysOnTop(False)
Gui.frmInventoryReportingDashboard..FontName("Tahoma")
Gui.frmInventoryReportingDashboard..FontSize(8.25)
Gui.frmInventoryReportingDashboard..ControlBox(True)
Gui.frmInventoryReportingDashboard..MaxButton(True)
Gui.frmInventoryReportingDashboard..MinButton(True)
Gui.frmInventoryReportingDashboard..MousePointer(0)
Gui.frmInventoryReportingDashboard..Moveable(True)
Gui.frmInventoryReportingDashboard..Sizeable(True)
Gui.frmInventoryReportingDashboard..ShowInTaskBar(True)
Gui.frmInventoryReportingDashboard..TitleBar(True)
Gui.frmInventoryReportingDashboard..Event(UnLoad,frmInventoryReportingDashboard_UnLoad)
Gui.frmInventoryReportingDashboard.frame1.Create(Frame)
Gui.frmInventoryReportingDashboard.frame1.Enabled(True)
Gui.frmInventoryReportingDashboard.frame1.Visible(True)
Gui.frmInventoryReportingDashboard.frame1.Zorder(0)
Gui.frmInventoryReportingDashboard.frame1.Size(1024,620)
Gui.frmInventoryReportingDashboard.frame1.Position(0,2)
Gui.frmInventoryReportingDashboard.frame1.Caption("")
Gui.frmInventoryReportingDashboard.frame1.FontName("Tahoma")
Gui.frmInventoryReportingDashboard.frame1.FontSize(8.25)
Gui.frmInventoryReportingDashboard.frame1.Dock(2)
Gui.frmInventoryReportingDashboard.frame1.Anchor(15)
Gui.frmInventoryReportingDashboard.tab1.Create(Tab)
Gui.frmInventoryReportingDashboard.tab1.Enabled(True)
Gui.frmInventoryReportingDashboard.tab1.Visible(True)
Gui.frmInventoryReportingDashboard.tab1.Zorder(0)
Gui.frmInventoryReportingDashboard.tab1.Size(1029,621)
Gui.frmInventoryReportingDashboard.tab1.Position(0,-1)
Gui.frmInventoryReportingDashboard.tab1.FontName("Tahoma")
Gui.frmInventoryReportingDashboard.tab1.FontSize(8.25)
Gui.frmInventoryReportingDashboard.tab1.Parent("frame1")
Gui.frmInventoryReportingDashboard.tab1.Dock(2)
Gui.frmInventoryReportingDashboard.tab1.Anchor(15)
Gui.frmInventoryReportingDashboard.tab1.Tabs(2)
Gui.frmInventoryReportingDashboard.tab1.SetTab(0)
Gui.frmInventoryReportingDashboard.tab1.Caption("On Hand Inventory Detail by Bin")
Gui.frmInventoryReportingDashboard.tab1.SetTab(1)
Gui.frmInventoryReportingDashboard.tab1.Caption("WIP")
Gui.frmInventoryReportingDashboard.GsGcWIP.Create(GsGridControl)
Gui.frmInventoryReportingDashboard.GsGcWIP.Enabled(True)
Gui.frmInventoryReportingDashboard.GsGcWIP.Visible(True)
Gui.frmInventoryReportingDashboard.GsGcWIP.Zorder(0)
Gui.frmInventoryReportingDashboard.GsGcWIP.Size(1028,558)
Gui.frmInventoryReportingDashboard.GsGcWIP.Position(0,31)
Gui.frmInventoryReportingDashboard.GsGcWIP.Parent("tab1",1)
Gui.frmInventoryReportingDashboard.GsGcWIP.Dock(0)
Gui.frmInventoryReportingDashboard.GsGcWIP.Anchor(15)
Gui.frmInventoryReportingDashboard.GsGcWIP.Event(RowCellClick,GsGcWIP_RowCellClick)
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.Create(Button)
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.Enabled(True)
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.Visible(True)
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.Zorder(0)
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.Size(64,18)
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.Position(371,4)
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.Caption("Refresh")
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.FontName("Tahoma")
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.FontSize(8.25)
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.Parent("tab1",1)
Gui.frmInventoryReportingDashboard.cmd_WIP_Refresh.Event(Click,cmd_WIP_Refresh_Click)
Gui.frmInventoryReportingDashboard.lbl1.Create(Label,"Cut Off Date",True,62,13,0,7,7,True,0,"Tahoma",8.25,,0,0)
Gui.frmInventoryReportingDashboard.lbl1.BorderStyle(0)
Gui.frmInventoryReportingDashboard.lbl1.Parent("tab1",1)
Gui.frmInventoryReportingDashboard.dtp_WIP.Create(DatePicker)
Gui.frmInventoryReportingDashboard.dtp_WIP.Enabled(True)
Gui.frmInventoryReportingDashboard.dtp_WIP.Visible(True)
Gui.frmInventoryReportingDashboard.dtp_WIP.Zorder(0)
Gui.frmInventoryReportingDashboard.dtp_WIP.Size(87,20)
Gui.frmInventoryReportingDashboard.dtp_WIP.Position(77,3)
Gui.frmInventoryReportingDashboard.dtp_WIP.CheckBox(False)
Gui.frmInventoryReportingDashboard.dtp_WIP.FontName("Tahoma")
Gui.frmInventoryReportingDashboard.dtp_WIP.FontSize(8.25)
Gui.frmInventoryReportingDashboard.dtp_WIP.Parent("tab1",1)
Gui.frmInventoryReportingDashboard.dtp_WIP.Event(Change,dtp_WIP_Change)
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.Create(CheckBox)
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.Enabled(True)
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.Visible(True)
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.Zorder(0)
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.Size(87,20)
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.Position(181,3)
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.Caption("Show Detail")
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.FontName("Tahoma")
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.FontSize(8.25)
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.Parent("tab1",1)
Gui.frmInventoryReportingDashboard.chk_WIP_Show_Detail.Event(Change,chk_WIP_Show_Detail_Change)
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.Create(Button)
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.Enabled(True)
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.Visible(True)
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.Zorder(0)
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.Size(75,20)
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.Position(284,3)
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.Caption("Export")
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.FontName("Tahoma")
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.FontSize(8.25)
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.Parent("tab1",1)
Gui.frmInventoryReportingDashboard.cmd_WIP_Export.Event(Click,cmd_WIP_Export_Click)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Create(GsGridControl)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Enabled(True)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Visible(True)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Zorder(0)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Size(1022,562)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Position(0,28)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Parent("tab1",0)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Dock(0)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Anchor(15)
Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Event(RowCellClick,GsGcInventoryDetail_RowCellClick)
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.Create(Button)
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.Enabled(True)
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.Visible(True)
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.Zorder(0)
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.Size(75,20)
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.Position(188,2)
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.Caption("Export")
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.FontName("Tahoma")
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.FontSize(8.25)
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.Parent("tab1",0)
Gui.frmInventoryReportingDashboard.cmd_Inv_Export.Event(Click,cmd_Inv_Export_Click)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.Create(DatePicker)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.Enabled(True)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.Visible(True)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.Zorder(0)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.Size(100,20)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.Position(77,3)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.CheckBox(False)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.FontName("Tahoma")
Gui.frmInventoryReportingDashboard.dtp_InvDetail.FontSize(8.25)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.Parent("tab1",0)
Gui.frmInventoryReportingDashboard.dtp_InvDetail.Event(Change,dtp_InvDetail_Change)
Gui.frmInventoryReportingDashboard.lbl_Cut_Off.Create(Label,"Cut Off Date",True,62,13,0,7,6,True,0,"Tahoma",8.25,,0,0)
Gui.frmInventoryReportingDashboard.lbl_Cut_Off.BorderStyle(0)
Gui.frmInventoryReportingDashboard.lbl_Cut_Off.Parent("tab1",0)
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.Create(Button)
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.Enabled(True)
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.Visible(True)
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.Zorder(0)
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.Size(71,21)
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.Position(274,3)
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.Caption("Refresh")
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.FontName("Tahoma")
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.FontSize(8.25)
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.Parent("tab1",0)
Gui.frmInventoryReportingDashboard.cmd_Inv_Refresh.Event(Click,cmd_Inv_Refresh_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
v.Global.sFileLocation.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
v.Local.sRet.Declare
v.Local.bRet.Declare
f.Intrinsic.Control.Try
	F.ODBC.Connection!con.OpenCompanyConnection(999)
	'f.Intrinsic.Control.CallSub(HourlyCache)
	
	
	f.Intrinsic.Control.If(v.Caller.Hook,=,"1000153")
		f.Intrinsic.Control.CallSub(HourlyCache)
		f.ODBC.Connection!con.Close
		f.Intrinsic.Control.End
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(CreateDir)
		'f.Intrinsic.Control.CallSub(LoadData)
		gui.frmInventoryReportingDashboard.tab1.SetTab(0)
	
		gui.frmInventoryReportingDashboard..Show()
	f.Intrinsic.Control.EndIf
		
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.LoadData.Start
v.Local.sSQL.Declare
v.Local.dDate.Declare
F.Intrinsic.Control.Try
	
	v.Local.dDate.Set(v.Screen.frmInventoryReportingDashboard!dtp_WIP.Value)
	
	
	v.Local.sSQL.Set("Select Distinct * from GCG_6946_Inv_Dtl")
	
	'f.Intrinsic.Control.CallSub(InvDetailLoad)
	f.Intrinsic.Control.CallSub(LoadDtXStatus)
	
'	'f.Data.DataTable.CreateFromSQL("dtInvDetailTemp","con",v.Local.sSQL,true)
'	f.ODBC.Connection!con.Execute("Delete from GCG_6946_Inv_Dtl")
'	
	'f.Data.Datatable.AddExpressionColumn("dtXStatus","INVENTORY_UM","String", "TRIM([UM_Inventory])")
	'f.Data.Datatable.AddExpressionColumn("dtXStatus","Extra_Desc","String", "ISNULL([ExtraDesc],' ')")
	'f.Data.Datatable.AddExpressionColumn("dtXStatus","DateHistory","String", "ISNULL([Date_History],'1900-1-1')")
'	
	'f.Data.Datatable.AddExpressionColumn("dtNew","INVENTORY_UM","String", "TRIM([UM_Inventory])")
	'f.Data.Datatable.AddExpressionColumn("dtNew","Extra_Desc","String", "ISNULL([ExtraDesc],' ')")
	'f.Data.Datatable.AddExpressionColumn("dtNew","DateHistory","String", "ISNULL([Date_History],'1900-1-1')")
	
'	f.Data.DataTable.CreateFromSQL("dtInvDetail","con",v.Local.sSQL,true)
	'f.Data.DataTable.CreateFromSQL("dtNew","con",v.Local.sSQL,true)

	F.Data.DataTable.AddExpressionColumn("dtNew", "PART_WithoutRev", "string", "Substring([PART] + '                 ',1,17)")
	F.Data.DataTable.AddExpressionColumn("dtNew", "REVWithoutPart", "string", "Substring([PART] + '                 ',18,20)")
	'f.Data.DataTable.RemoveColumn("dtInvDetail","PART")
	'f.Data.DataTable.RemoveColumn("dtInvDetail","REV")
	
	'v.Local.sSQL.Set("Select JOB, SUFFIX, PART, DESCRIPTION from V_JOB_HEADER")
	'f.Intrinsic.String.Build("Select A.JOB, A.SUFFIX, A.DESCRIPTION, B.QTY_SHIPPED,A.AMT_SALES,A.AMT_MATERIAL, A.AMT_LABOR, A.AMT_OVERHEAD,(B.QTY_SHIPPED + A.AMT_MATERIAL + A.AMT_LABOR + A.AMT_OVERHEAD) as Work_In_Process_Total, A.PART from V_JOB_HEADER A left join V_ORDER_HIST_LOT B on A.JOB = B.JOB and A.SUFFIX = B.SUFFIX Where A.DATE_DUE < '{0}'",v.Ambient.Date.PervasiveDate,v.Local.sSQL)
	
	f.Intrinsic.Control.If(v.Screen.frmInventoryReportingDashboard!chk_WIP_Show_Detail.Value,=,0)
		'f.Intrinsic.String.Build("Select * from GCG_6946_WIP_PARENT where DUE_DATE <= '{0}'",v.Local.dDate.PervasiveDate,v.Local.sSQL)
		'f.Intrinsic.String.Build("Select DISTINCT VJH.JOB, VJH.DATE_DUE as DUE_DATE, (VJH.FREIGHT+VJH.PARTIAL_FREIGHT) AS FREIGHT,(VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL) AS MATERIAL,(VJH.AMT_LABOR+VJH.PARTIAL_LABOR) AS LABOR, (VJH.OUTS+VJH.PARTIAL_OUTSIDE) AS OUTSIDE_PROCESS,(VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD) AS OVERHEAD,(VJH.OTHER+VJH.PARTIAL_OTHER) AS OTHER,(VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER) AS WIP from V_JOB_HEADER VJH left join V_JOB_DETAIL VJD on VJH.JOB = VJD.JOB and VJH.SUFFIX = VJD.SUFFIX where VJD.FLAG_INDIRECT <> 'I' and DATE_DUE <= '{0}' order by VJH.JOB",v.Local.dDate.PervasiveDate,v.Local.sSQL)
		f.Intrinsic.Control.CallSub(LoadWIP)
		
	f.Intrinsic.Control.Else
		'v.Local.sSQL.Set("SELECT VJH.JOB,VJH.SUFFIX, CASE WHEN VOB.NAME_CUSTOMER IS NOT NULL THEN VOB.NAME_CUSTOMER ELSE VCM.NAME_CUSTOMER END AS NAME_CUSTOMER, VJH.SALESPERSON, CUSTOMER_PO, COALESCE(VJH.PART,'') AS PART, '' As DISPLAY_PART, VJH.LOCATION, VJH.PRODUCT_LINE, VJH.PART_DESCRIPTION AS DESCRIPTION, DATE_OPENED, (SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, DATE_DUE, SCHEDULED_DUE_DATE, '' AS OUTSIDE, CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP, VJH.QTY_ORDER, VJH.FREIGHT+VJH.PARTIAL_FREIGHT AS FREIGHT,VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL AS MATERIAL,VJH.AMT_LABOR+VJH.PARTIAL_LABOR AS LABOR,VJH.OUTS+VJH.PARTIAL_OUTSIDE AS OUTSIDE_PROCESS,VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD AS OVERHEAD,VJH.OTHER+VJH.PARTIAL_OTHER AS OTHER,VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER AS WIP, VIA.AMT_PRICE*(VJH.QTY_ORDER - VJH.QTY_COMPLETED) as SALES_VALUE FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO LEFT JOIN V_INVENTORY_ALL VIA ON VJH.PART = VIA.PART AND VJH.LOCATION = VIA.LOCATION WHERE DATE_CLOSED = '1900-1-1'  ORDER BY DATE_DUE;")
		
		v.Local.sSQL.Set("SELECT * from GCG_6946_WIP_DETAIL")
	f.Intrinsic.Control.EndIf
	
	f.Data.DataTable.CreateFromSQL("dtWIP","con",v.Local.sSQL,true)
	
	'gui.frmInventoryReportingDashboard.GsGcInventoryDetail.AddGridviewFromDatatable("gvInvDetail","dtInvDetail")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.AddGridviewFromDatatable("gvInvDetail","dtNew")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.MainView("gvInvDetail")
	
	'gui.frmInventoryReportingDashboard.GsGcWIP.AddGridviewFromDatatable("gvWIP","dtWIP")
	gui.frmInventoryReportingDashboard.GsGcWIP.AddGridviewFromDatatable("gvWIP","dtAll2")
	gui.frmInventoryReportingDashboard.GsGcWIP.MainView("gvWIP")
	'f.Data.DataTable.Close("dtInvDetail")
	f.Data.DataTable.Close("dtWIP")
	
	f.Intrinsic.Control.CallSub(SetGridProperties)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.LoadData.End

Program.Sub.SetGridProperties.Start
v.Local.iCounter.Declare
v.Local.sFieldNames.Declare
F.Intrinsic.Control.Try

	
	'Inventory Detail grid properties
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetGridviewProperty("gvInvDetail","Showgrouppanel","true")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetGridviewProperty("gvInvDetail","AllowFilter","true")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetGridviewProperty("gvInvDetail","AllowSort","true")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetGridviewProperty("gvInvDetail","ShowConditionalFormattingItem","true")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetGridviewProperty("gvInvDetail","AllowColumnMoving","true")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetGridviewProperty("gvInvDetail","AllowColumnResizing","true")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetGridviewProperty("gvInvDetail","OptionsFilterUseNewCustomFilterDialog","true")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetGridviewProperty("gvInvDetail","OptionsViewColumnAutoWidth","true")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetGridviewProperty("gvInvDetail","OptionsViewRowAutoHeight","true")
	
	
'	v.Local.sFieldNames.Set(v.DataTable.dtInvDetail.FieldNames)
'	f.Intrinsic.String.Split(v.Local.sFieldNames,"*!*",v.Local.sFieldNames)
'	
'	'Default Column Properties
'	f.Intrinsic.Control.For(v.Local.iCounter,0,v.Local.sFieldNames.UBound,1)
'		'gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty()
'	f.Intrinsic.Control.Next(v.Local.iCounter)
	
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","PART_WithoutRev","Caption","Part")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","REVWithoutPart","Caption","Rev")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","Description","Caption","Description")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","Location","Caption","Location")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","BIN","Caption","Bin")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","COST","Caption","Standard Cost")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","QTY_ONHAND","Caption","Qty On Hand")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","UM_INVENTORY","Caption","Inventory Unit of Measure")
	'gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","Value","Caption","Value")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","PRODUCT_LINE","Caption","Product Line")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","CODE_SORT","Caption","Sort Code")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","MATL","Caption","Material Cost")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","LABOR","Caption","Labor Cost")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OVHD","Caption","Overhead Cost")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OUTS","Caption","Outside Cost")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","NAME_VENDOR","Caption","Vendor Sort")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","CODE_SOURCE","Caption","Source")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","EXTRADESC","Caption","Extra Part Description")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","DATE_HISTORY","Caption","Date History")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","Ext_Cost","Caption","Value")
	
	
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","MATL","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","LABOR","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OVHD","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OUTS","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","PRODUCT_LINE","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","CODE_SORT","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","DATE_HISTORY","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","PART","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","EXTRADESC","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","CODE_SOURCE","Visible",false)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","NAME_VENDOR","Visible",false)

	'gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","INVENTORY_UM","Visible",false)
	
	'gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","REV","Visible",false)
	
	
	
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","PART_WithoutRev","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","REVWithoutPart","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","Description","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","Location","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","BIN","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","COST","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","QTY_ONHAND","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","UM_INVENTORY","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","Ext_Cost","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","PRODUCT_LINE","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","CODE_SORT","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","MATL","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","LABOR","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OVHD","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OUTS","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","NAME_VENDOR","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","CODE_SOURCE","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","EXTRADESC","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","DATE_HISTORY","HeaderFontBold",True)
	
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","MATL","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","LABOR","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OVHD","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OUTS","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","PRODUCT_LINE","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","CODE_SORT","HeaderFontBold",True)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","DATE_HISTORY","HeaderFontBold",True)
	'gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","Rev","HeaderFontBold",True)
	
	
	
	
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","PART_WithoutRev","CellForeColor",v.Color.Blue)
	
	Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","QTY_ONHAND", "DisplayCustomNumeric", "###,###0.00")
	Gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","COST", "DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","Ext_Cost","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","MATL","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","LABOR","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OVHD","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","OUTS","DisplayCustomNumeric", "###,###0.00")
	
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","PART_WithoutRev","VisibleIndex","0")
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","REVWithoutPart","VisibleIndex","1")
	
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.SetColumnProperty("gvInvDetail","DATE_HISTORY","DisplayCustomDatetime","d")

	'WIP
	gui.frmInventoryReportingDashboard.GsGcWIP.SetGridviewProperty("gvWIP","Showgrouppanel","true")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetGridviewProperty("gvWIP","AllowFilter","true")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetGridviewProperty("gvWIP","AllowSort","true")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetGridviewProperty("gvWIP","ShowConditionalFormattingItem","true")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetGridviewProperty("gvWIP","AllowColumnMoving","true")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetGridviewProperty("gvWIP","AllowColumnResizing","true")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetGridviewProperty("gvWIP","OptionsFilterUseNewCustomFilterDialog","true")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetGridviewProperty("gvWIP","OptionsViewColumnAutoWidth","true")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetGridviewProperty("gvWIP","OptionsViewRowAutoHeight","true")
	
	
	f.Intrinsic.Control.If(v.Screen.frmInventoryReportingDashboard!chk_WIP_Show_Detail.Value,=,0)
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","JOB","Caption","Job")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","SUFFIX","Caption","Suffix")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","PART","Caption","Part")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DESCRIPTION","Caption","Description")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","MATERIAL","Caption","Material")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","LABOR","Caption","Labor")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OUTSIDE_PROCESS","Caption","Outside Process")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OVERHEAD","Caption","Overhead")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Other","Caption","Other")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","WIP","Caption","Work in Process")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Sales_Value","Caption","Sales Value")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","AMT_PARTIAL_SHPMNT","Caption","Partial Shipment")
		
		
		'gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DUE_DATE","Caption","Due Date")
		
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","JOB","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","SUFFIX","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","PART","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DESCRIPTION","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","MATERIAL","HeaderFontBold","true")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","LABOR","HeaderFontBold","true")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OUTSIDE_PROCESS","HeaderFontBold","true")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OVERHEAD","HeaderFontBold","true")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Other","HeaderFontBold","true")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","WIP","HeaderFontBold","true")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Sales_Value","HeaderFontBold","true")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","AMT_PARTIAL_SHPMNT","HeaderFontBold","true")
		'gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DUE_DATE","HeaderFontBold","true")
		
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","JS","Visible",false)
		
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","IND_FLAG","Visible",false)
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DATE_DUE","Visible",false)
		
	f.Intrinsic.Control.Else
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","JOB","Caption","Job")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","MATERIAL","Caption","Material")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","LABOR","Caption","Labor")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OUTSIDE_PROCESS","Caption","Outside Process")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OVERHEAD","Caption","Overhead")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Other","Caption","Other")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","WIP","Caption","Work in Process")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Sales_Value","Caption","Sales Value")
		
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Suffix","Caption","Suffix")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DESCRIPTION","Caption","Description")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","PART","Caption","Part")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","START_DATE","Caption","Start Date")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DUE_DATE","Caption","Due Date")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","SCHEDULED_DATE","Caption","Scheduled Due Date")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","ORDER_QTY","Caption","Order Qty")
		
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","JOB","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","MATERIAL","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","LABOR","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OUTSIDE_PROCESS","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OVERHEAD","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Other","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","WIP","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Sales_Value","HeaderFontBold","True")
		
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Suffix","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DESCRIPTION","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","PART","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","START_DATE","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DUE_DATE","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","SCHEDULED_DATE","HeaderFontBold","True")
		gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","ORDER_QTY","HeaderFontBold","True")
		
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","START_DATE","DisplayCustomDatetime","d")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","SCHEDULED_DATE","DisplayCustomDatetime","d")
	
	
	f.Intrinsic.Control.EndIf
	
	'gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DUE_DATE","DisplayCustomDatetime","d")
	'Gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","ONHAND_QTY", "DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Sales_Value","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","MATERIAL","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","LABOR","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OVERHEAD","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","OUTSIDE_PROCESS","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","Other","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","WIP","DisplayCustomNumeric", "###,###0.00")
	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","AMT_PARTIAL_SHPMNT","DisplayCustomNumeric","###,###0.00")
	
	'gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","DUE_DATE","Visible","False")
	
	

	gui.frmInventoryReportingDashboard.GsGcWIP.SetColumnProperty("gvWIP","JOB","CellForeColor",v.Color.Blue)
	
	f.Intrinsic.Control.CallSub(Deserialize)
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.SetGridProperties.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare
f.Intrinsic.String.Build("Project GCG_6946_Inv_Report_Dash.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
f.ODBC.Connection!con.Close
f.Intrinsic.Control.End
Program.Sub.ErrorMsg.End

Program.Sub.frmInventoryReportingDashboard_UnLoad.Start
f.Intrinsic.Control.CallSub(serialize)
f.ODBC.Connection!con.Close
f.Intrinsic.Control.End
Program.Sub.frmInventoryReportingDashboard_UnLoad.End

Program.Sub.GsGcWIP_RowCellClick.Start
v.Local.sParam.Declare
v.Local.sLoc.Declare
V.Local.sWO.Declare
V.Local.sWO1.Declare
Variable.Local.sPO.Declare
f.Intrinsic.Control.Try

	F.Intrinsic.Control.SelectCase(v.Args.Column)
		F.Intrinsic.Control.Case("JOB")
			'gui.frmWIP.GsGrid.GetCellValueByColumnName("GridView","Job",v.Args.RowIndex,V.Local.sWO)
			gui.frmInventoryReportingDashboard.GsGcWIP.GetCellValueByColumnName("gvWIP","Job",v.Args.RowIndex,V.Local.sWO)
			'gui.frmWIP.GsGrid.GetCellValueByColumnName("GridView","Suffix",v.Args.RowIndex,V.Local.sWO1)
			gui.frmInventoryReportingDashboard.GsGcWIP.GetCellValueByColumnName("gvWIP","Suffix",v.Args.RowIndex,V.Local.sWO1)
			F.Intrinsic.String.ConcatCallWrapperArgs(7,V.Local.sWO.Trim,V.Local.sWO1.Trim,"A",V.Local.sParam)
			F.Global.General.CallWrapperSync(450000,V.Local.sParam)
'		F.Intrinsic.Control.Case("PO")
'			gui.frmWIP.GsGrid.GetCellValueByColumnName("GridView","PO",v.Args.RowIndex,V.Local.sPO)
'			Function.Intrinsic.String.Concat("O!*!",Variable.Local.sPO,"!*!",Variable.Local.sParam)
'			Function.Global.General.CallWrapperASync(175200,Variable.Local.sParam)
		F.Intrinsic.Control.Case("PART")
			'gui.frmWIP.GsGrid.GetCellValueByColumnName("GridView","Part",v.Args.RowIndex,v.Local.sParam)
			gui.frmInventoryReportingDashboard.GsGcWIP.GetCellValueByColumnName("gvWIP","Part",v.Args.RowIndex,V.Local.sParam)
			f.Intrinsic.string.Build("O!*!{0}!*!{1}",v.Local.sParam,v.Local.sLoc,v.Local.sParam)
			Function.Global.General.CallWrapperASync(300000,v.Local.sParam)
	F.Intrinsic.Control.EndSelect
		
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.GsGcWIP_RowCellClick.End

Program.Sub.GsGcInventoryDetail_RowCellClick.Start
v.Local.sParam.Declare
v.Local.sLoc.Declare
V.Local.sWO.Declare
V.Local.sWO1.Declare
Variable.Local.sPO.Declare
f.Intrinsic.Control.Try

	F.Intrinsic.Control.SelectCase(v.Args.Column)
'		F.Intrinsic.Control.Case("JOB")
'			'gui.frmWIP.GsGrid.GetCellValueByColumnName("GridView","Job",v.Args.RowIndex,V.Local.sWO)
'			gui.frmInventoryReportingDashboard.GsGcWIP.GetCellValueByColumnName("gvWIP","Job",v.Args.RowIndex,V.Local.sWO)
'			'gui.frmWIP.GsGrid.GetCellValueByColumnName("GridView","Suffix",v.Args.RowIndex,V.Local.sWO1)
'			gui.frmInventoryReportingDashboard.GsGcWIP.GetCellValueByColumnName("gvWIP","Suffix",v.Args.RowIndex,V.Local.sWO1)
'			F.Intrinsic.String.ConcatCallWrapperArgs(7,V.Local.sWO.Trim,V.Local.sWO1.Trim,"A",V.Local.sParam)
'			F.Global.General.CallWrapperSync(450000,V.Local.sParam)
'		F.Intrinsic.Control.Case("PO")
'			gui.frmWIP.GsGrid.GetCellValueByColumnName("GridView","PO",v.Args.RowIndex,V.Local.sPO)
'			Function.Intrinsic.String.Concat("O!*!",Variable.Local.sPO,"!*!",Variable.Local.sParam)
'			Function.Global.General.CallWrapperASync(175200,Variable.Local.sParam)
		F.Intrinsic.Control.Case("PART")
			'gui.frmWIP.GsGrid.GetCellValueByColumnName("GridView","Part",v.Args.RowIndex,v.Local.sParam)
			gui.frmInventoryReportingDashboard.GsGcInventoryDetail.GetCellValueByColumnName("gvInvDetail","Part",v.Args.RowIndex,V.Local.sParam)
			f.Intrinsic.string.Build("O!*!{0}!*!{1}",v.Local.sParam,v.Local.sLoc,v.Local.sParam)
			Function.Global.General.CallWrapperASync(300000,v.Local.sParam)
	F.Intrinsic.Control.EndSelect
		
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.GsGcInventoryDetail_RowCellClick.End

Program.Sub.Serialize.Start
f.Intrinsic.Control.Try

	V.Local.sSerialize.Declare 

	gui.frmInventoryReportingDashboard.GsGcWIP.Serialize("gvWIP",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvWIP",6946,1001,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Serialize("gvInvDetail",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvInvDetail",6946,1001,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
	f.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
f.Intrinsic.Control.Try

	V.Local.sSerialize.Declare
	
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvWIP",6946,1001,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.trim,<>,"")
		gui.frmInventoryReportingDashboard.GsGcWIP.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
		
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvInvDetail",6946,1001,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.trim,<>,"")
		gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.cmd_Inv_Export_Click.Start
f.Intrinsic.Control.Try

	F.Intrinsic.String.Build("{0}\Custom\6946\{1}",V.Caller.GlobalDir,"InvDetail.csv",V.Global.sFileLocation)
	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.Export(v.Global.sFileLocation,"csv")
	
	F.Intrinsic.Task.ShellExec(V.Caller.Handle,"",v.Global.sFileLocation,"","",1)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmd_Inv_Export_Click.End

Program.Sub.cmd_WIP_Export_Click.Start
f.Intrinsic.Control.Try

	F.Intrinsic.String.Build("{0}\Custom\6946\{1}",V.Caller.GlobalDir,"WIP.csv",V.Global.sFileLocation)
	gui.frmInventoryReportingDashboard.GsGcWIP.Export(v.Global.sFileLocation,"csv")
	F.Intrinsic.Task.ShellExec(V.Caller.Handle,"",v.Global.sFileLocation,"","",1)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmd_WIP_Export_Click.End

Program.Sub.CreateDir.Start
V.Local.bRet.Declare(Boolean,False)
f.Intrinsic.Control.Try
	
	'Creating custom directory in Global file path if its not there
	F.Intrinsic.Control.If(V.Caller.GlobalDir.Right1,=,"\")
		F.Intrinsic.String.Build("{0}Custom\",V.Caller.GlobalDir,V.Global.sFileLocation)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\Custom\",V.Caller.GlobalDir,V.Global.sFileLocation)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.File.DirExists(V.Global.sFileLocation,V.Local.bRet)
	
	F.Intrinsic.Control.If(V.Local.bRet,=,False)
		F.Intrinsic.File.CreateDir(V.Global.sFileLocation)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}6946\",V.Global.sFileLocation,V.Global.sFileLocation)
	
	F.Intrinsic.File.DirExists(V.Global.sFileLocation,V.Local.bRet)
	
	F.Intrinsic.Control.If(V.Local.bRet,=,False)
		F.Intrinsic.File.CreateDir(V.Global.sFileLocation)
	F.Intrinsic.Control.EndIf

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.CreateDir.End

Program.Sub.chk_WIP_Show_Detail_Change.Start
v.Local.sSQL.Declare
v.Local.dCutoffDate.Declare
F.Intrinsic.Control.Try
	
	v.Local.dCutoffDate.Set(v.Screen.frmInventoryReportingDashboard!dtp_WIP.Value)
	
	
	'v.Local.sSQL.Set("Select JOB, SUFFIX, PART, DESCRIPTION from V_JOB_HEADER")
	'f.Intrinsic.String.Build("Select A.JOB, A.SUFFIX, A.DESCRIPTION, B.QTY_SHIPPED,A.AMT_SALES,A.AMT_MATERIAL, A.AMT_LABOR, A.AMT_OVERHEAD,(B.QTY_SHIPPED + A.AMT_MATERIAL + A.AMT_LABOR + A.AMT_OVERHEAD) as Work_In_Process_Total, A.PART from V_JOB_HEADER A left join V_ORDER_HIST_LOT B on A.JOB = B.JOB and A.SUFFIX = B.SUFFIX Where A.DATE_DUE < '{0}'",v.Ambient.Date.PervasiveDate,v.Local.sSQL)
	gui.frmInventoryReportingDashboard.GsGcWIP.InvokeWait("Loading...","Inventory Reporting Dashboard [6946]")
	f.Intrinsic.Control.If(v.Screen.frmInventoryReportingDashboard!chk_WIP_Show_Detail.Value,=,0)
		'v.Local.sSQL.Set("Select JOB, SUM(VJH.FREIGHT+VJH.PARTIAL_FREIGHT) AS FREIGHT,SUM(VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL) AS MATERIAL,SUM(VJH.AMT_LABOR+VJH.PARTIAL_LABOR) AS LABOR, SUM(VJH.OUTS+VJH.PARTIAL_OUTSIDE) AS OUTSIDE_PROCESS,SUM(VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD) AS OVERHEAD,SUM(VJH.OTHER+VJH.PARTIAL_OTHER) AS OTHER,SUM(VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER) AS WIP ,SUM(VIA.AMT_PRICE*(VJH.QTY_ORDER - VJH.QTY_COMPLETED)) as SALES_VALUE from V_JOB_HEADER VJH LEFT JOIN V_INVENTORY_ALL VIA ON VJH.PART = VIA.PART AND VJH.LOCATION = VIA.LOCATION group by JOB")
		
		
		f.Intrinsic.String.Build("Select * from GCG_6946_WIP_PARENT where DUE_DATE <= '{0}'",v.Local.dCutoffDate.PervasiveDate,v.Local.sSQL)
		'v.Local.sSQL.Set("Select * from GCG_6946_WIP_PARENT")
	f.Intrinsic.Control.Else
		'v.Local.sSQL.Set("SELECT VJH.JOB,VJH.SUFFIX, COALESCE(VJH.PART,'') AS PART, VJH.PART_DESCRIPTION AS DESCRIPTION, (SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, DATE_DUE, SCHEDULED_DUE_DATE, VJH.QTY_ORDER, VJH.FREIGHT+VJH.PARTIAL_FREIGHT AS FREIGHT,VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL AS MATERIAL,VJH.AMT_LABOR+VJH.PARTIAL_LABOR AS LABOR,VJH.OUTS+VJH.PARTIAL_OUTSIDE AS OUTSIDE_PROCESS,VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD AS OVERHEAD,VJH.OTHER+VJH.PARTIAL_OTHER AS OTHER,VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER AS WIP, VIA.AMT_PRICE*(VJH.QTY_ORDER - VJH.QTY_COMPLETED) as SALES_VALUE FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO LEFT JOIN V_INVENTORY_ALL VIA ON VJH.PART = VIA.PART AND VJH.LOCATION = VIA.LOCATION WHERE DATE_CLOSED = '1900-1-1'  ORDER BY VJH.JOB,DATE_DUE;")
		
		'v.Local.sSQL.Set("SELECT * from GCG_6946_WIP_DETAIL")
		f.Intrinsic.String.Build("SELECT * from GCG_6946_WIP_DETAIL where DUE_DATE <= '{0}'",v.Local.dCutoffDate.PervasiveDate,v.Local.sSQL)
	f.Intrinsic.Control.EndIf
	
	f.Data.DataTable.CreateFromSQL("dtWIP","con",v.Local.sSQL,true)	
	
	gui.frmInventoryReportingDashboard.GsGcWIP.AddGridviewFromDatatable("gvWIP","dtWIP")
	gui.frmInventoryReportingDashboard.GsGcWIP.MainView("gvWIP")
	f.Data.DataTable.Close("dtWIP")
	f.Intrinsic.Control.CallSub(SetGridProperties)
	gui.frmInventoryReportingDashboard.GsGcWIP.HideWait
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry	
Program.Sub.chk_WIP_Show_Detail_Change.End

Program.Sub.dtp_InvDetail_Change.Start
v.Local.sSQL.Declare
v.Local.dDate.Declare
f.Intrinsic.Control.Try

'	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.InvokeWait("Loading...","Inventory Reporting Dashboard [6946]")
'	v.Local.dDate.Set(v.Screen.frmInventoryReportingDashboard!dtp_InvDetail.Value)
'	f.Intrinsic.String.Build("Select * from GCG_6946_Inv_Dtl where DATE_HISTORY <= '{0}'",v.Local.dDate.PervasiveDate,v.Local.sSQL)
'	'v.Local.sSQL.Set("Select A.Part, A.Description, A.Location, A.BIN, A.AMT_COST, A.QTY_ONHAND, A.UM_INVENTORY, (A.AMT_COST * A.QTY_ONHAND) as Value, A.PRODUCT_LINE, A.CODE_SORT, B.MATL_COST, B.LABOR_COST, B.OVHD_COST, B.OUTS_COST from V_INVENTORY_MSTR A LEFT JOIN ITEM_MASTER B on A.Part = B.Part where A.QTY_ONHAND <> 0.0")
'	'v.Local.sSQL.Set(v.Local.sSQL)
'	
'	
'	'f.Intrinsic.String.Build("Select A.Part, A.Description, A.Location, A.BIN, A.AMT_COST, A.QTY_ONHAND, A.UM_INVENTORY, (A.AMT_COST * A.QTY_ONHAND) as Value, A.PRODUCT_LINE, A.CODE_SORT, B.MATL_COST, B.LABOR_COST, B.OVHD_COST, B.OUTS_COST from V_INVENTORY_MSTR A LEFT JOIN ITEM_MASTER B on A.Part = B.Part where A.QTY_ONHAND <> 0.0 and DATE_DUE")
'	
'	f.Data.DataTable.CreateFromSQL("dtInvDetail","con",v.Local.sSQL,true)	
'	F.Data.DataTable.AddExpressionColumn("dtInvDetail", "PART_WithoutRev", "string", "Substring([PART] + '                 ',1,17)")
'	F.Data.DataTable.AddExpressionColumn("dtInvDetail", "REVWithoutPart", "string", "Substring([PART] + '                 ',18,20)")
'	
'	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.AddGridviewFromDatatable("gvInvDetail","dtInvDetail")
'	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.MainView("gvInvDetail")
'	
'	f.Data.DataTable.Close("dtInvDetail")
'	
'	f.Intrinsic.Control.CallSub(SetGridProperties)
'	gui.frmInventoryReportingDashboard.GsGcInventoryDetail.HideWait
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.dtp_InvDetail_Change.End

Program.Sub.dtp_WIP_Change.Start
v.Local.sSQL.Declare
v.Local.dCutoffDate.Declare
F.Intrinsic.Control.Try
	
'	v.Local.dCutoffDate.Set(v.Screen.frmInventoryReportingDashboard!dtp_WIP.Value)
'	
'	gui.frmInventoryReportingDashboard.GsGcWIP.InvokeWait("Loading...","Inventory Reporting Dashboard [6946]")
'	f.Intrinsic.Control.If(v.Screen.frmInventoryReportingDashboard!chk_WIP_Show_Detail.Value,=,0)
'		
'		'f.Intrinsic.String.Build("Select JOB, SUM(VJH.FREIGHT+VJH.PARTIAL_FREIGHT) AS FREIGHT,SUM(VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL) AS MATERIAL,SUM(VJH.AMT_LABOR+VJH.PARTIAL_LABOR) AS LABOR, SUM(VJH.OUTS+VJH.PARTIAL_OUTSIDE) AS OUTSIDE_PROCESS,SUM(VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD) AS OVERHEAD,SUM(VJH.OTHER+VJH.PARTIAL_OTHER) AS OTHER,SUM(VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER) AS WIP ,SUM(VIA.AMT_PRICE*(VJH.QTY_ORDER - VJH.QTY_COMPLETED)) as SALES_VALUE from V_JOB_HEADER VJH LEFT JOIN V_INVENTORY_ALL VIA ON VJH.PART = VIA.PART AND VJH.LOCATION = VIA.LOCATION where DATE_DUE <= '{0}' group by JOB",v.Local.dCutoffDate.PervasiveDate,v.Local.sSQL)
'		f.Intrinsic.String.Build("Select * from GCG_6946_WIP_PARENT where DUE_DATE <= '{0}'",v.Local.dCutoffDate.PervasiveDate,v.Local.sSQL)
'		'v.Local.sSQL.Set("Select * from GCG_6946_WIP_PARENT")
'	f.Intrinsic.Control.Else
'			
'		'f.Intrinsic.String.Build("SELECT VJH.JOB,VJH.SUFFIX, COALESCE(VJH.PART,'') AS PART, VJH.PART_DESCRIPTION AS DESCRIPTION, (SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, DATE_DUE, SCHEDULED_DUE_DATE, VJH.QTY_ORDER, VJH.FREIGHT+VJH.PARTIAL_FREIGHT AS FREIGHT,VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL AS MATERIAL,VJH.AMT_LABOR+VJH.PARTIAL_LABOR AS LABOR,VJH.OUTS+VJH.PARTIAL_OUTSIDE AS OUTSIDE_PROCESS,VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD AS OVERHEAD,VJH.OTHER+VJH.PARTIAL_OTHER AS OTHER,VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER AS WIP, VIA.AMT_PRICE*(VJH.QTY_ORDER - VJH.QTY_COMPLETED) as SALES_VALUE FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO LEFT JOIN V_INVENTORY_ALL VIA ON VJH.PART = VIA.PART AND VJH.LOCATION = VIA.LOCATION WHERE DATE_DUE <= '{0}' ORDER BY VJH.JOB,DATE_DUE;",v.Local.dCutoffDate.PervasiveDate,v.Local.sSQL)
'		'v.Local.sSQL.Set("SELECT * from GCG_6946_WIP_DETAIL")
'		f.Intrinsic.String.Build("SELECT * from GCG_6946_WIP_DETAIL where DUE_DATE <= '{0}'",v.Local.dCutoffDate.PervasiveDate,v.Local.sSQL)
'	f.Intrinsic.Control.EndIf
'	
'	f.Data.DataTable.CreateFromSQL("dtWIP","con",v.Local.sSQL,true)	
'	
'	gui.frmInventoryReportingDashboard.GsGcWIP.AddGridviewFromDatatable("gvWIP","dtWIP")
'	gui.frmInventoryReportingDashboard.GsGcWIP.MainView("gvWIP")
'	f.Data.DataTable.Close("dtWIP")
'	f.Intrinsic.Control.CallSub(SetGridProperties)
'	gui.frmInventoryReportingDashboard.GsGcWIP.HideWait
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry	
Program.Sub.dtp_WIP_Change.End

Program.Sub.HourlyCache.Start
v.Local.sSQL.Declare
v.Local.sKeyFields.Declare
v.Local.sFieldMap.Declare
V.Local.iC.Declare
v.Local.dDate.Declare
F.Intrinsic.Control.Try
		
	'''''''''''''''''''''''''''''''''''''''Load GCG_6946_Inv_Dtl''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	'v.Local.sSQL.Set("Select DISTINCT A.Part, A.Description, A.Location, B.BIN, B.UNIT_COST, A.Qty_OnHand, A.UM_INVENTORY, (B.UNIT_COST * A.Qty_OnHand) as Value, A.PRODUCT_LINE, A.CODE_SORT, A.KEY_SOURCE, B.MATL_COST, B.LABOR_COST, B.OVHD_COST, B.OUTS_COST, C.NAME_VENDOR, D.TEXT from V_INVENTORY_MSTR A LEFT JOIN V_ITEM_MASTER B on A.Part = B.Part LEFT JOIN V_INVENTORY_MST2 C on A.Part = C.Part LEFT JOIN V_INV_EXTRA_TEXT D on A.Part = D.Part where A.Qty_OnHand <> 0.0")	
'	
'	f.Intrinsic.Control.CallSub(InvDetailLoad)
'	'f.Data.DataTable.CreateFromSQL("dtInvDetailTemp","con",v.Local.sSQL,true)
'	f.ODBC.Connection!con.Execute("Delete from GCG_6946_Inv_Dtl")
'	
'	'f.Data.Datatable.AddExpressionColumn("dtXStatus","INVENTORY_UM","String", "TRIM([UM_Inventory])")
'	'f.Data.Datatable.AddExpressionColumn("dtXStatus","Extra_Desc","String", "ISNULL([ExtraDesc],' ')")
'	'f.Data.Datatable.AddExpressionColumn("dtXStatus","DateHistory","String", "ISNULL([Date_History],'1900-1-1')")
'	
'	f.Data.Datatable.AddExpressionColumn("dtNew","INVENTORY_UM","String", "TRIM([UM_Inventory])")
'	f.Data.Datatable.AddExpressionColumn("dtNew","Extra_Desc","String", "ISNULL([ExtraDesc],' ')")
'	f.Data.Datatable.AddExpressionColumn("dtNew","DateHistory","String", "ISNULL([Date_History],'1900-1-1')")
'		
'	
'	'v.Local.sFieldMap.Set("Part@!@PART*!*LOCATION@!@REV*!*Description@!@DESCRIPTION*!*Bin@!@BIN*!*COST@!@STANDARD_COST*!*Qty_ONHAND@!@ONHAND_QTY*!*INVENTORY_UM@!@INVENTORY_UM*!*EXT_COST@!@VALUE*!*MATL@!@MATERIAL*!*Labor@!@LABOR*!*Ovhd@!@OVERHEAD*!*Outs@!@OUTSIDE*!*Name_Vendor@!@VENDOR_SORT*!*Product_Line@!@PRODUCT_LINE*!*Code_Source@!@SOURCE*!*Code_Sort@!@SORT_CODE*!*Extra_Desc@!@EXTRA_PART_DESC*!*DateHistory@!@DATE_HISTORY")
'	
'	
'	'V.Local.sKeyFields.Set("PART*!*Location*!*DESCRIPTION*!*BIN*!*COST*!*Qty_ONHAND*!*INVENTORY_UM*!*EXT_COST*!*MATL*!*LABOR*!*Ovhd*!*Outs*!*Name_Vendor*!*PRODUCT_LINE*!*Code_Source*!*Code_Sort*!*Extra_Desc*!*DateHistory")
'	
'	v.Local.sFieldMap.Set("Part@!@PART*!*LOCATION@!@REV*!*Description@!@DESCRIPTION*!*Bin@!@BIN*!*COST@!@STANDARD_COST*!*Qty_ONHAND@!@ONHAND_QTY*!*INVENTORY_UM@!@INVENTORY_UM*!*EXT_COST@!@VALUE*!*MATL@!@MATERIAL*!*Labor@!@LABOR*!*Ovhd@!@OVERHEAD*!*Outs@!@OUTSIDE*!*Name_Vendor@!@VENDOR_SORT*!*Product_Line@!@PRODUCT_LINE*!*Code_Source@!@SOURCE*!*Code_Sort@!@SORT_CODE*!*Extra_Desc@!@EXTRA_PART_DESC*!*DateHistory@!@DATE_HISTORY")
'	
'	
'	V.Local.sKeyFields.Set("PART*!*Location*!*DESCRIPTION*!*BIN*!*COST*!*Qty_ONHAND*!*INVENTORY_UM*!*EXT_COST*!*MATL*!*LABOR*!*Ovhd*!*Outs*!*Name_Vendor*!*PRODUCT_LINE*!*Code_Source*!*Code_Sort*!*Extra_Desc*!*DateHistory")
'	
'	'f.Data.DataTable.SaveToDB("dtXStatus","con","GCG_6946_Inv_Dtl",v.Local.sKeyFields,256,v.Local.sFieldMap)
'	f.Data.DataTable.SaveToDB("dtNew","con","GCG_6946_Inv_Dtl",v.Local.sKeyFields,256,v.Local.sFieldMap)
'	f.Data.DataTable.Close("dtNew")
	
	
	
	'''''''''''''''''''''''''''''''''''''''Load GCG_6946_WIP_PARENT''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	
	v.Local.sJobHeaderSQL.Declare
	v.Local.sJobDetailSQL.Declare
	v.Local.sInvAllSQL.Declare
	
	'v.Local.sSQL.Set("Select VJH.JOB, VJH.DATE_DUE, SUM(VJH.FREIGHT+VJH.PARTIAL_FREIGHT) AS FREIGHT,SUM(VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL) AS MATERIAL,SUM(VJH.AMT_LABOR+VJH.PARTIAL_LABOR) AS LABOR, SUM(VJH.OUTS+VJH.PARTIAL_OUTSIDE) AS OUTSIDE_PROCESS,SUM(VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD) AS OVERHEAD,SUM(VJH.OTHER+VJH.PARTIAL_OTHER) AS OTHER,SUM(VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER) AS WIP ,SUM(VIA.AMT_PRICE*(VJH.QTY_ORDER - VJH.QTY_COMPLETED)) as SALES_VALUE from V_JOB_HEADER VJH LEFT JOIN V_INVENTORY_ALL VIA ON VJH.PART = VIA.PART AND VJH.LOCATION = VIA.LOCATION left join V_JOB_DETAIL VJD on VJH.JOB = VJD.JOB and VJH.SUFFIX = VJD.SUFFIX where VJD.FLAG_INDIRECT <> 'I' group by VJH.JOB, VJH.DATE_DUE")
	
	v.Local.sJobHeaderSQL.Set("Select VJH.JOB, VJH.DATE_DUE, (VJH.FREIGHT+VJH.PARTIAL_FREIGHT) AS FREIGHT,(VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL) AS MATERIAL,(VJH.AMT_LABOR+VJH.PARTIAL_LABOR) AS LABOR, (VJH.OUTS+VJH.PARTIAL_OUTSIDE) AS OUTSIDE_PROCESS,(VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD) AS OVERHEAD,(VJH.OTHER+VJH.PARTIAL_OTHER) AS OTHER,(VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER) AS WIP, VJH.PART, VJH.LOCATION from V_JOB_HEADER VJH order by JOB")
	
	v.Local.sJobDetailSQL.Set("select DISTINCT JOB, SUFFIX from V_JOB_DETAIL where FLAG_INDIRECT <> 'I' order by JOB")
	
	v.Local.sInvAllSQL.Set("Select DISTINCT VIA.AMT_PRICE, PART, LOCATION from V_INVENTORY_ALL VIA")
	
	f.Data.DataTable.CreateFromSQL("dtJobHeader","con",v.Local.sJobHeaderSQL,true)
	f.Data.DataTable.CreateFromSQL("dtJobDetail","con",v.Local.sJobDetailSQL,true)
	f.Data.DataTable.CreateFromSQL("dtInvAll","con",v.Local.sInvAllSQL,true)
	
	f.Data.Linq.Join("leftjoin","datatable","dtJobHeader*!*A","datatable","dtJobDetail*!*B","A.JOB = B.JOB","A.JOB*!*A.DATE_DUE*!*A.FREIGHT*!*A.MATERIAL*!*A.LABOR*!*A.OUTSIDE_PROCESS*!*A.OVERHEAD*!*A.OTHER*!*A.WIP*!*A.PART*!*A.LOCATION","","","","dtWIPParentTemp",True)
	
	'F.Data.Linq.Join("leftjoin","datatable","dtMultiShip*!*A","datatable","dtTaxTable*!*B","A.SHIP_TAX_1 = B.AUTH","A.CUSTOMER_NAME*!*A.SHIP_TAX_1*!*A.SHIP_TAX_2*!*A.SHIP_TAX_3*!*B.RATE*!*B.AUTH","","","","dtTaxRates",True)
	
	
	
	'f.Data.DataTable.CreateFromSQL("dtWIPParentTemp","con",v.Local.sSQL,true)
	
	f.Data.DataTable.AddExpressionColumn("dtWIPParentTemp","SALESVALUE","Float","ISNULL([SALES_VALUE],'0.00')")

	
	f.ODBC.Connection!con.Execute("Delete from GCG_6946_WIP_PARENT")

	V.Local.sKeyFields.Set("JOB*!*FREIGHT*!*MATERIAL*!*LABOR*!*OUTSIDE_PROCESS*!*OVERHEAD*!*OTHER*!*WIP*!*SALESVALUE*!*DUE_DATE")
	
	v.Local.sFieldMap.Set("JOB@!@JOB*!*FREIGHT@!@FREIGHT*!*MATERIAL@!@MATERIAL*!*LABOR@!@LABOR*!*OUTSIDE_PROCESS@!@OUTSIDE_PROCESS*!*OVERHEAD@!@OVERHEAD*!*OTHER@!@OTHER*!*WIP@!@WIP*!*SALESVALUE@!@SALES_VALUE*!*DUE_DATE@!@DUE_DATE")
	
	
	f.Data.DataTable.AddColumn("dtWIPParentTemp","DUE_DATE","String")
	
	f.Intrinsic.Control.For(v.Local.iC,0,v.DataTable.dtWIPParentTemp.RowCount--,1)
		v.Local.dDate.Set(v.DataTable.dtWIPParentTemp(v.Local.iC).DATE_DUE!FieldValTrim)
		f.Data.DataTable.SetValue("dtWIPParentTemp",v.Local.iC,"DUE_DATE",v.Local.dDate.PervasiveDate)
	f.Intrinsic.Control.Next(v.Local.iC)
	f.Data.DataTable.SaveToDB("dtWIPParentTemp","con","GCG_6946_WIP_PARENT",v.Local.sKeyFields,256,v.Local.sFieldMap)
	f.Data.DataTable.Close("dtWIPParentTemp")
	
		
	'''''''''''''''''''''''''''''''''''''''Load GCG_6946_WIP_DETAIL''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

	'v.Local.sSQL.Set("SELECT VJH.JOB,VJH.SUFFIX, CASE WHEN VOB.NAME_CUSTOMER IS NOT NULL THEN VOB.NAME_CUSTOMER ELSE VCM.NAME_CUSTOMER END AS NAME_CUSTOMER, VJH.SALESPERSON, CUSTOMER_PO, COALESCE(VJH.PART,'') AS PART, '' As DISPLAY_PART, VJH.LOCATION, VJH.PRODUCT_LINE, VJH.PART_DESCRIPTION AS DESCRIPTION, DATE_OPENED, (SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, DATE_DUE, SCHEDULED_DUE_DATE, '' AS OUTSIDE, CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP, VJH.QTY_ORDER, VJH.FREIGHT+VJH.PARTIAL_FREIGHT AS FREIGHT,VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL AS MATERIAL,VJH.AMT_LABOR+VJH.PARTIAL_LABOR AS LABOR,VJH.OUTS+VJH.PARTIAL_OUTSIDE AS OUTSIDE_PROCESS,VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD AS OVERHEAD,VJH.OTHER+VJH.PARTIAL_OTHER AS OTHER,VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER AS WIP, VIA.AMT_PRICE*(VJH.QTY_ORDER - VJH.QTY_COMPLETED) as SALES_VALUE FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO LEFT JOIN V_INVENTORY_ALL VIA ON VJH.PART = VIA.PART AND VJH.LOCATION = VIA.LOCATION WHERE DATE_CLOSED = '1900-1-1'  ORDER BY DATE_DUE;")
	
	v.Local.sSQL.Set("SELECT VJH.JOB,VJH.SUFFIX, CASE WHEN VOB.NAME_CUSTOMER IS NOT NULL THEN VOB.NAME_CUSTOMER ELSE VCM.NAME_CUSTOMER END AS NAME_CUSTOMER, VJH.SALESPERSON, CUSTOMER_PO, COALESCE(VJH.PART,'') AS PART, '' As DISPLAY_PART, VJH.LOCATION, VJH.PRODUCT_LINE, VJH.PART_DESCRIPTION AS DESCRIPTION, DATE_OPENED, (SELECT TOP 1 VJO.DATE_START FROM V_JOB_OPERATIONS VJO WHERE VJO.LMO = 'L' AND VJO.JOB = VJH.JOB AND VJO.SUFFIX = VJH.SUFFIX AND VJO.SEQ < '990000') AS DATE_START, DATE_DUE, SCHEDULED_DUE_DATE, '' AS OUTSIDE, CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP, VJH.QTY_ORDER, VJH.FREIGHT+VJH.PARTIAL_FREIGHT AS FREIGHT,VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL AS MATERIAL,VJH.AMT_LABOR+VJH.PARTIAL_LABOR AS LABOR,VJH.OUTS+VJH.PARTIAL_OUTSIDE AS OUTSIDE_PROCESS,VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD AS OVERHEAD,VJH.OTHER+VJH.PARTIAL_OTHER AS OTHER,VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER AS WIP, VIA.AMT_PRICE*(VJH.QTY_ORDER - VJH.QTY_COMPLETED) as SALES_VALUE FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO LEFT JOIN V_INVENTORY_ALL VIA ON VJH.PART = VIA.PART AND VJH.LOCATION = VIA.LOCATION left join V_JOB_DETAIL VJD on VJH.JOB = VJD.JOB and VJH.SUFFIX = VJD.SUFFIX WHERE DATE_CLOSED = '1900-1-1' AND VJD.FLAG_INDIRECT <> 'I'  ORDER BY DATE_DUE;")
	
	f.Data.DataTable.CreateFromSQL("dtWIPDetailTemp","con",v.Local.sSQL,true)
	
	f.ODBC.Connection!con.Execute("Delete from GCG_6946_WIP_DETAIL")
	
	f.Data.DataTable.AddExpressionColumn("dtWIPDetailTemp","SALESVALUE","Float","ISNULL([SALES_VALUE],'0.00')")
	
	
	V.Local.sKeyFields.Set("JOB*!*SUFFIX*!*PART*!*DESCRIPTION*!*START_DATE*!*DUE_DATE*!*SCHEDULED_DATE*!*QTY_ORDER*!*FREIGHT*!*MATERIAL*!*LABOR*!*OUTSIDE_PROCESS*!*OVERHEAD*!*OTHER*!*WIP*!*SALESVALUE")
	
	v.Local.sFieldMap.Set("JOB@!@JOB*!*SUFFIX@!@SUFFIX*!*PART@!@PART*!*DESCRIPTION@!@DESCRIPTION*!*START_DATE@!@START_DATE*!*DUE_DATE@!@DUE_DATE*!*SCHEDULED_DATE@!@SCHEDULED_DATE*!*QTY_ORDER@!@ORDER_QTY*!*FREIGHT@!@FREIGHT*!*MATERIAL@!@MATERIAL*!*LABOR@!@LABOR*!*OUTSIDE_PROCESS@!@OUTSIDE_PROCESS*!*OVERHEAD@!@OVERHEAD*!*OTHER@!@OTHER*!*WIP@!@WIP*!*SALESVALUE@!@SALES_VALUE")
	
	
	f.Data.DataTable.AddColumn("dtWIPDetailTemp","DUE_DATE","String")
	f.Data.DataTable.AddColumn("dtWIPDetailTemp","START_DATE","String")
	f.Data.DataTable.AddColumn("dtWIPDetailTemp","SCHEDULED_DATE","String")
	
	'If null fill in default pervasive date value
	f.Intrinsic.Control.For(v.Local.iC,0,v.DataTable.dtWIPDetailTemp.RowCount--,1)
		'Set Date_Due
		f.Intrinsic.Control.If(v.DataTable.dtWIPDetailTemp(v.Local.iC).DATE_DUE!FieldValTrim,=,"")
			v.Local.dDate.Set("1900-1-1")
		f.Intrinsic.Control.Else
			v.Local.dDate.Set(v.DataTable.dtWIPDetailTemp(v.Local.iC).DATE_DUE!FieldValTrim)
		f.Intrinsic.Control.EndIf	
		f.Data.DataTable.SetValue("dtWIPDetailTemp",v.Local.iC,"DUE_DATE",v.Local.dDate.PervasiveDate)	
		
		'Set DATE_START
		f.Intrinsic.Control.If(v.DataTable.dtWIPDetailTemp(v.Local.iC).DATE_START!FieldValTrim,=,"")
			v.Local.dDate.Set("1900-1-1")
		f.Intrinsic.Control.Else
			v.Local.dDate.Set(v.DataTable.dtWIPDetailTemp(v.Local.iC).DATE_START!FieldValTrim)
		f.Intrinsic.Control.EndIf		
		f.Data.DataTable.SetValue("dtWIPDetailTemp",v.Local.iC,"START_DATE",v.Local.dDate.PervasiveDate)	
		
		'Set SCHEDULED_DUE_DATE
		f.Intrinsic.Control.If(v.DataTable.dtWIPDetailTemp(v.Local.iC).SCHEDULED_DUE_DATE!FieldValTrim,=,"")
			v.Local.dDate.Set("1900-1-1")
		f.Intrinsic.Control.Else
			v.Local.dDate.Set(v.DataTable.dtWIPDetailTemp(v.Local.iC).SCHEDULED_DUE_DATE!FieldValTrim)
		f.Intrinsic.Control.EndIf			
		f.Data.DataTable.SetValue("dtWIPDetailTemp",v.Local.iC,"SCHEDULED_DATE",v.Local.dDate.PervasiveDate)
		
	f.Intrinsic.Control.Next(v.Local.iC)
		
	f.Data.DataTable.SaveToDB("dtWIPDetailTemp","con","GCG_6946_WIP_DETAIL",v.Local.sKeyFields,256,v.Local.sFieldMap)
	f.Data.DataTable.Close("dtWIPDetailTemp")
	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry

Program.Sub.HourlyCache.End

Program.Sub.InvDetailLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.dCutoffDate.Declare
	V.Local.sPart.Declare
	V.Local.sActiveFilterString.Declare
	
'	Gui.frmXStatus.lblStatus.Visible(True)
'	Gui.frmXStatus.pbStatus.Visible(True)
'	Gui.frmXStatus.pbStatus.Min(0)
'	Gui.frmXStatus.pbStatus.Max(100)
	
'	F.Intrinsic.Control.If(V.Global.bLoadDate)
'		F.Intrinsic.Control.CallSub(Serialize)
'	F.Intrinsic.Control.EndIf
'	V.Global.bLoadDate.Set(True)
	
	F.Intrinsic.Control.If(V.DataTable.dtXStatus.Exists)
		F.Data.DataTable.Close("dtXStatus")
		F.Data.DataTable.Close("dtAddlInfo")
		F.Data.DataTable.Close("dtNew")
	F.Intrinsic.Control.EndIf
	
'	F.Intrinsic.Control.If(V.Screen.frmXStatus!chkCutoff.Value,=,0)
'		F.Data.DataTable.CreateFromSQL("dtXStatus","con","Select ' ' As Plus,' ' As DocCntrl,A.Part+A.Location As PartLoc,COALESCE(A.Part,'') As Part,RTrim(A.Location) As Location,RTrim(A.Description) As Description,RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc,RTrim(D.Text) As ExtraDesc,RTrim(A.Product_Line) As Product_Line,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,RTrim(A.Code_Sort) As Code_Sort,RTrim(A.Bin) As Bin,A.Code_ABC,Cast(Null As Date) As Date_History,A.Qty_OnHand,A.Qty_Reorder,A.Qty_OnOrder_PO+A.Qty_OnOrder_WO As OnOrder,A.Qty_Required,A.Qty_Usage_Mo_01+A.Qty_Usage_Mo_02+A.Qty_Usage_Mo_03+A.Qty_Usage_Mo_04+A.Qty_Usage_Mo_05+A.Qty_Usage_Mo_06+A.Qty_Usage_Mo_07+A.Qty_Usage_Mo_08+A.Qty_Usage_Mo_09+A.Qty_Usage_Mo_10+A.Qty_Usage_Mo_11+A.Qty_Usage_Mo_12 As Usage_Last_12_Mos,A.Amt_Price, C.Cost, C.Matl, C.Labor, C.Ovhd, C.Outs, C.Freight, C.Oth,A.Qty_OnHand*A.Amt_Price As Ext_Price,A.Qty_OnHand*C.Cost As Ext_Cost,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2,'' as display_part From V_Inventory_Mstr A Left Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Left Join V_Inventory_Cost C On A.Part = C.Part And A.Location = C.Locn Left Join V_Inv_Extra_Text D On A.Part = D.Part Order By A.Part,A.Location;",True)
'		Gui.frmXStatus.pbStatus.Value(50)
	'F.Intrinsic.Control.Else
	
		V.Local.dCutoffDate.Set(V.Screen.frmInventoryReportingDashboard!dtp_InvDetail.Value)
		'Find Part+Loc with data after the Cutoff
		F.Intrinsic.String.Build("Select Distinct Part+Location From V_Inventory_Hist Where Date_History > '{0}' And Part <> '' And SubString(Part,17,1) <> '*' Order By Part,Location;",V.Local.dCutoffDate.PervasiveDate,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sPart)
		F.Intrinsic.String.Replace(V.Local.sPart,"'","''",V.Local.sPart)
		F.Intrinsic.String.Replace(V.Local.sPart,"#$#","','",V.Local.sPart)
		'Gui.frmXStatus.pbStatus.Value(5)
		'Get information for the Part+Loc above
		F.Intrinsic.String.Build("Select Distinct ' ' As Plus,' ' As DocCntrl,A.Part+A.Location As PartLoc,COALESCE(A.Part,'') As Part,RTrim(A.Location) As Location,RTrim(A.Description) As Description,RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc,RTrim(D.Text) As ExtraDesc,RTrim(A.Product_Line) As Product_Line,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,RTrim(A.Code_Sort) As Code_Sort,RTrim(A.Bin) As Bin,A.Code_ABC,Cast(Null As Date) As Date_History,Cast(0 As Numeric(12,4)) As Qty_OnHand,Cast(0 As Numeric(12,4)) As Qty_Reorder,Cast(0 As Numeric(12,4)) As OnOrder,Cast(0 As Numeric(12,4)) As Qty_Required,Cast(0 As Numeric(12,4)) As Usage_Last_12_Mos,A.Amt_Price As Amt_Price,Cast(0 As Numeric(12,4)) As Cost,Cast(0 As Numeric(12,4)) As Matl,Cast(0 As Numeric(12,4)) As Labor,Cast(0 As Numeric(12,4)) As Ovhd,Cast(0 As Numeric(12,4)) As Outs,Cast(0 As Numeric(12,4)) As Freight,Cast(0 As Numeric(12,4)) As Oth,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2,'' as display_part From V_Inventory_Mstr A Left Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Left Join V_Inventory_Hist C On A.Part = C.Part And A.Location = C.Location Left Join V_Inv_Extra_Text D On A.Part = D.Part Where C.Date_History <= '{0}' And A.Part+A.Location In ('{1}') Order By A.Part,A.Location;",V.Local.dCutoffDate.PervasiveDate,V.Local.sPart,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtX1","con",V.Local.sSQL,True)
'		f.Intrinsic.Control.If(v.Global.bLongPart)
			'F.Data.DataTable.AddDisplayPartColumn("dtX1",0,"PART","DISPLAY_PART")
'		f.Intrinsic.Control.Else
'			F.Data.DataTable.CopyColumn("dtX1","PART","DISPLAY_PART")
'		f.Intrinsic.Control.EndIf	
		'Gui.frmXStatus.pbStatus.Value(15)
		'Get Inv History information for the Part+Loc above
		F.Intrinsic.String.Build("Select Part+Location As PartLoc,Part,Location,Date_History,Inv_Hist_Time,New_OnHand,New_Inv_Cost,New_Matl,New_Labr,New_Ovhd,New_Outs,New_Frgt,New_Oth From V_Inventory_Hist Where Date_History <= '{0}' And Part+Location In ('{1}') Order By Part,Location,Date_Action Desc,Inv_Hist_Time Desc;",V.Local.dCutoffDate.PervasiveDate,V.Local.sPart,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtXdic","con",V.Local.sSQL,True)
		'Gui.frmXStatus.pbStatus.Value(20)
		'Date_History
		F.Data.Dictionary.CreateFromDataTable("dDateHistory","dtXdic","PartLoc","Date_History")
		F.Data.Dictionary.SetDefaultReturn("dDateHistory",1/1/1900)
		F.Data.DataTable.FillFromDictionary("dtX1","dDateHistory","PartLoc","Date_History")
		F.Data.Dictionary.Close("dDateHistory")
		'Gui.frmXStatus.pbStatus.Value(25)
		'Qty_OnHand
		F.Data.Dictionary.CreateFromDataTable("dNewOnHand","dtXdic","PartLoc","New_OnHand")
		F.Data.Dictionary.SetDefaultReturn("dNewOnHand",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOnHand","PartLoc","Qty_OnHand")
		F.Data.Dictionary.Close("dNewOnHand")
		'Gui.frmXStatus.pbStatus.Value(30)
		'Cost
		F.Data.Dictionary.CreateFromDataTable("dNewInvCost","dtXdic","PartLoc","New_Inv_Cost")
		F.Data.Dictionary.SetDefaultReturn("dNewInvCost",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewInvCost","PartLoc","Cost")
		F.Data.Dictionary.Close("dNewInvCost")
		'Gui.frmXStatus.pbStatus.Value(35)
		'Matl
		F.Data.Dictionary.CreateFromDataTable("dNewMatl","dtXdic","PartLoc","New_Matl")
		F.Data.Dictionary.SetDefaultReturn("dNewMatl",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewMatl","PartLoc","Matl")
		F.Data.Dictionary.Close("dNewMatl")
		'Gui.frmXStatus.pbStatus.Value(40)
		'Labor
		F.Data.Dictionary.CreateFromDataTable("dNewLabr","dtXdic","PartLoc","New_Labr")
		F.Data.Dictionary.SetDefaultReturn("dNewLabr",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewLabr","PartLoc","Labor")
		F.Data.Dictionary.Close("dNewLabr")
		'Gui.frmXStatus.pbStatus.Value(45)
		'Ovhd
		F.Data.Dictionary.CreateFromDataTable("dNewOvhd","dtXdic","PartLoc","New_Ovhd")
		F.Data.Dictionary.SetDefaultReturn("dNewOvhd",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOvhd","PartLoc","Ovhd")
		F.Data.Dictionary.Close("dNewOvhd")
		'Gui.frmXStatus.pbStatus.Value(50)
		'Outs
		F.Data.Dictionary.CreateFromDataTable("dNewOuts","dtXdic","PartLoc","New_Outs")
		F.Data.Dictionary.SetDefaultReturn("dNewOuts",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOuts","PartLoc","Outs")
		F.Data.Dictionary.Close("dNewOuts")
		'Gui.frmXStatus.pbStatus.Value(55)
		'Freight
		F.Data.Dictionary.CreateFromDataTable("dNewFrgt","dtXdic","PartLoc","New_Frgt")
		F.Data.Dictionary.SetDefaultReturn("dNewFrgt",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewFrgt","PartLoc","Freight")
		F.Data.Dictionary.Close("dNewFrgt")
		'Gui.frmXStatus.pbStatus.Value(60)
		'Oth
		F.Data.Dictionary.CreateFromDataTable("dNewOth","dtXdic","PartLoc","New_Oth")
		F.Data.Dictionary.SetDefaultReturn("dNewOth",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOth","PartLoc","Oth")
		F.Data.Dictionary.Close("dNewOth")
		'Gui.frmXStatus.pbStatus.Value(65)
		'Ext_Price
		F.Data.DataTable.AddExpressionColumn("dtX1","Ext_Price",Float,"Qty_OnHand*Amt_Price")
		'Gui.frmXStatus.pbStatus.Value(70)
		'Ext_Cost
		F.Data.DataTable.AddExpressionColumn("dtX1","Ext_Cost",Float,"Qty_OnHand*Cost")
		'Gui.frmXStatus.pbStatus.Value(75)
		
		'Get Inventory Master information for parts not listed in the Part+Loc above
		F.Intrinsic.String.Build("Select ' ' As Plus,' ' As DocCntrl,A.Part+A.Location As PartLoc,COALESCE(A.Part,'') As Part,RTrim(A.Location) As Location,RTrim(A.Description) As Description, RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc, RTrim(D.Text) As ExtraDesc,RTrim(A.Product_Line) As Product_Line,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,RTrim(A.Code_Sort) As Code_Sort,RTrim(A.Bin) As Bin,A.Code_ABC,Cast(Null As Date) As Date_History,A.Qty_OnHand As Qty_OnHand,A.Qty_Reorder As Qty_Reorder,A.Qty_OnOrder_PO+A.Qty_OnOrder_WO As OnOrder,A.Qty_Required As Qty_Required,A.Qty_Usage_Mo_01+A.Qty_Usage_Mo_02+A.Qty_Usage_Mo_03+A.Qty_Usage_Mo_04+A.Qty_Usage_Mo_05+A.Qty_Usage_Mo_06+A.Qty_Usage_Mo_07+A.Qty_Usage_Mo_08+A.Qty_Usage_Mo_09+A.Qty_Usage_Mo_10+A.Qty_Usage_Mo_11+A.Qty_Usage_Mo_12 As Usage_Last_12_Mos,A.Amt_Price As Amt_Price, C.Cost As Cost, C.Matl As Matl, C.Labor As Labor, C.Ovhd As Ovhd, C.Outs As Outs, C.Freight As Freight, C.Oth As Oth,Cast(A.Qty_OnHand*A.Amt_Price As Float) As Ext_Price,Cast(A.Qty_OnHand*C.Cost As Float) As Ext_Cost,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2,'' as display_part From V_Inventory_Mstr A Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Join V_Inventory_Cost C On A.Part = C.Part And A.Location = C.Locn Left Join V_Inv_Extra_Text D On A.Part = D.Part Where A.Part+A.Location Not In ('{0}') Order By A.Part,A.Location;",V.Local.sPart,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtXStatus","con",V.Local.sSQL,True)
		'f.Intrinsic.Control.If(v.Global.bLongPart)
			'F.Data.DataTable.AddDisplayPartColumn("dtXStatus",0,"PART","DISPLAY_PART")
'		f.Intrinsic.Control.Else
			'F.Data.DataTable.CopyColumn("dtXStatus","PART","DISPLAY_PART")
'		f.Intrinsic.Control.EndIf
		'Gui.frmXStatus.pbStatus.Value(80)
		'Merge dtX1 and dtXStatus
		F.Data.DataTable.Merge("dtX1","dtXStatus",True,3)
		F.Data.DataTable.Close("dtX1")
		F.Data.DataTable.Close("dtXdic")
	'F.Intrinsic.Control.EndIf
	
	'Pull and add additional information information
	F.Data.DataTable.CreateFromSQL("dtAddlInfo","con","Select COALESCE(Part,'') As Part,RTrim(Location) As Location,UM_Purchasing,Factor_Conversion As PurchConvFactor,Consump_Conv As CompsConvFactor,Qty_Safety,Qty_OnOrder_PO,Qty_OnOrder_WO,LBS As Weight,Length,Width,Density_Raw_Matl As Density,Thickness,Code_Rm_Shape As Shape,Wt_Per_Foot,Requires_Insp,HM_Flag As HazMatlFlag,Tax_Exempt_Flg,Case When Part_Create_Date = '1900-01-01' Then Null Else Part_Create_Date End As Part_Create_Date,Part_Create_User,Qty_Order,Part_Price_Code From V_Inventory_All Order By Part,Location;",True)
	
	F.Data.Linq.Join("Leftjoin","DataTable","dtXStatus*!*XS","DataTable","dtAddlInfo*!*AI","XS.Part=AI.Part and XS.Location=AI.Location","XS.Plus*!*XS.DocCntrl*!*XS.Part*!*XS.DISPLAY_PART*!*XS.Location*!*XS.Description*!*XS.AltDesc*!*XS.ExtraDesc*!*XS.Product_Line*!*XS.Code_Source*!*XS.UM_Inventory*!*XS.Time_Material_Lead*!*XS.Code_Sort*!*XS.Bin*!*XS.Code_ABC*!*XS.Date_History*!*XS.Qty_OnHand*!*XS.Qty_Reorder*!*XS.OnOrder*!*XS.Qty_Required*!*XS.Usage_Last_12_Mos*!*XS.Amt_Price*!*XS.Cost*!*XS.Matl*!*XS.Labor*!*XS.Ovhd*!*XS.Outs*!*XS.Freight*!*XS.Oth*!*XS.Ext_Price*!*XS.Ext_Cost*!*XS.Flag_Lot*!*XS.Flag_Drop*!*XS.Flag_Serialize*!*XS.Obsolete_Flag*!*XS.Flag_Inactive*!*XS.Name_Vendor*!*XS.Text_Info1*!*XS.Text_Info2*!*AI.PART_PRICE_CODE*!*AI.UM_Purchasing*!*AI.PurchConvFactor*!*AI.CompsConvFactor*!*AI.Qty_Safety*!*AI.Qty_OnOrder_PO*!*AI.Qty_OnOrder_WO*!*AI.Weight*!*AI.Length*!*AI.Width*!*AI.Density*!*AI.Thickness*!*AI.Shape*!*AI.Wt_Per_Foot*!*AI.Requires_Insp*!*AI.HazMatlFlag*!*AI.Tax_Exempt_Flg*!*AI.Part_Create_Date*!*AI.Part_Create_User*!*AI.Qty_Order*!*XS.PartLoc","","","XS.display_Part","dtNew",True)
	

		'Router Complete 
		F.Data.DataTable.AddColumn("dtNew","RTR_Complete",Boolean,False)
		F.Data.Dictionary.CreateFromSQL("dXRef","con","select RTR_NUM,Complete from v_ROUTER_SUPP_HDR ;")
		F.Data.Dictionary.SetDefaultReturn("dXRef",False)
		F.Data.DataTable.FillFromDictionary("dtNew","dXRef","Part","RTR_Complete")
		F.Data.Dictionary.Close("dXRef")
		
	'Cross Reference (XRef)
		F.Data.DataTable.AddColumn("dtNew","XRef",Boolean,False)
		F.Data.Dictionary.CreateFromSQL("dXRef","con","Select Part+Location As PartLoc,Cast(1 As Bit) As XRef From V_Inv_Cross_Ref Where Customer <> '' Or Customer_Part <> '' Or Vendor <> '' Or Mfg_Part <> '';")
		F.Data.Dictionary.SetDefaultReturn("dXRef",False)
		F.Data.DataTable.FillFromDictionary("dtNew","dXRef","PartLoc","XRef")
		F.Data.Dictionary.Close("dXRef")
	
	'Inventory Status
	'InTransit
		F.Data.DataTable.AddColumn("dtNew","InTransit",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+From_Location As PartLoc,Sum(Qty_Transfer) As Qty_Transfer From V_Inv_In_Transit Where Qty_Transfer <> 0 Group By Part,From_Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","InTransit")
		F.Data.Dictionary.Close("dInvStat")
	'InInspection
		F.Data.DataTable.AddColumn("dtNew","InInspection",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location As PartLoc,Sum(Qty_Recd_Not_Insp) As Qty_Recd_Not_Insp From V_PO_Lines Where Flag_Recv_Close <> 'Y' And Qty_Recd_Not_Insp <> 0 Group By Part,Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","InInspection")
		F.Data.Dictionary.Close("dInvStat")
	'InQuality
		F.Data.DataTable.AddColumn("dtNew","InQuality",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location As PartLoc,Sum(Qty_Remaining) As Qty_Remaining From V_Quality Where Qty_Remaining <> 0 Group By Part,Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","InQuality")
		F.Data.Dictionary.Close("dInvStat")
	'Consigned
		F.Data.DataTable.AddColumn("dtNew","Consigned",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location as PartLoc,Sum(Quantity) As Quantity From V_Item_Master Where Allocated = 'G' Group By Part,Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","Consigned")
		F.Data.Dictionary.Close("dInvStat")
	'Allocated
		F.Data.DataTable.AddColumn("dtNew","Allocated",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location as PartLoc,Sum(Quantity) As Quantity From V_Item_Master Where Allocated = 'Y' Group By Part,Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","Allocated")
		F.Data.Dictionary.Close("dInvStat")
	'Net
		F.Data.DataTable.AddExpressionColumn("dtNew","Net",Float,"([Qty_OnHand]+[Qty_OnOrder_PO]+[Qty_OnOrder_WO])-[Qty_Required]")
	'TotalQuantity
		F.Data.DataTable.AddExpressionColumn("dtNew","TotalQuantity",Float,"[Qty_OnHand]+[Qty_OnOrder_PO]+[Qty_OnOrder_WO]")
	'Set Doc Control Column
		F.Data.DataTable.SetValue("dtNew",-1,"DocCntrl","DCS-OFF")
		F.Data.Dictionary.CreateFromSQL("dDCC","con","Select RTrim(ID) As Part,'DCS-ON' As DCC From Link_Data Where Type = '00030'")
		F.Data.Dictionary.SetDefaultReturn("dDCC","DCS-OFF")
		F.Data.DataTable.FillFromDictionary("dtNew","dDCC","Part","DocCntrl")
		F.Data.Dictionary.Close("dDCC")
	
	'Remove Key Column
	F.Data.DataTable.RemoveColumn("dtNew","PartLoc")
	'doing this again so i can only filter in parts when a cut off date is used.  dictionary created to set filterable value on the child datatable based on records present in the parent table
	F.Data.DataTable.AddExpressionColumn("dtNew","PartLoc",String,"TRIM(Part) + TRIM(Location)")
	F.Data.DataTable.AddColumn("dtNew","FLAG_FILTER","String","Y")
	f.Data.Dictionary.CreateFromDataTable("FilterDict","dtNew","PartLoc","FLAG_FILTER")
	f.Data.Dictionary.SetDefaultReturn("FilterDict","N")
	
	F.Data.DataTable.RemoveColumn("dtNew","PartLoc")
	F.Data.DataTable.RemoveColumn("dtNew","FLAG_FILTER")

	
	'Create XRef Subtable. 
	F.Data.DataTable.CreateFromSQL("Temp","con","Select RTrim(Part) As Part,RTrim(Location) As Location,RTrim(Part) + Rtrim(Location) as PartLoc,RTrim(A.Customer) As Customer,RTrim(B.Name_Customer) As Customer_Name,RTrim(Customer_Part) As Customer_Part,RTrim(Vendor) As Vendor,RTrim(Mfg_Name) As Mfg_Name,RTrim(Mfg_Part) As Mfg_Part,RTrim(Status) As Status,RTrim(User_Defined_Part) As User_Defined_Part,RTrim(Comment) As Comment,RTRIM('N') as Flag_filter From V_Inv_Cross_Ref A Left Join V_Customer_Master B On A.Customer = B.Customer Where A.Customer <> '' Or Customer_Part <> '' Or Vendor <> '' Or Mfg_Part <> '';",True)
	'setting the column to filter by.
	f.Data.Datatable.FillFromDictionary("Temp","FilterDict","PartLoc","Flag_Filter")
	
	f.Data.Dictionary.Close("FilterDict")
	'set view on datatable which only filters records that exist in the parent column.
	f.Data.DataView.Create("Temp","TempVw",22,"FLAG_FILTER = 'Y'","")
	f.Data.DataView.ToDataTable("Temp","TempVw","dtNew$dtXRef",True)
	
	f.Data.DataView.Close("Temp","TempVw")
	f.Data.DataTable.Close("Temp")
	
	f.Data.DataTable.RemoveColumn("dtNew$dtXRef","PartLoc")
	f.Data.DataTable.RemoveColumn("dtNew$dtXRef","Flag_filter")
	
	'AddRelation
	F.Data.DataTable.AddRelation("dtNew","Part*!*Location","dtNew$dtXRef","Part*!*Location","XRef")
	
	'2/13/2020 - DD - Added column for tracking which rows have had their source changed.  This will be used later in batch processing to update the part and BOM, as well as rebuild routers, in a batch instead of on a cell change event.
	f.Data.DataTable.AddColumn("dtNew","Changed","boolean",False)
	
	'2/18/2020 - DD - Added support for long part
	F.Data.DataTable.AddDisplayPartColumn("dtNew",0,"PART","DISPLAY_PART")
	
	f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.InvDetailLoad.End

Program.Sub.cmd_WIP_Refresh_Click.Start
gui.frmInventoryReportingDashboard.GsGcWIP.InvokeWait("Loading Grid...","Inventory Reporting Dashboard [6946]")
f.Intrinsic.Control.CallSub(LoadData)
gui.frmInventoryReportingDashboard.GsGcWIP.HideWait
Program.Sub.cmd_WIP_Refresh_Click.End

Program.Sub.cmd_Inv_Refresh_Click.Start
gui.frmInventoryReportingDashboard.GsGcInventoryDetail.InvokeWait("Loading Grid...","Inventory Reporting Dashboard [6946]")
f.Intrinsic.Control.CallSub(LoadData)
gui.frmInventoryReportingDashboard.GsGcInventoryDetail.HideWait
Program.Sub.cmd_Inv_Refresh_Click.End

Program.Sub.LoadDtXStatus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.dCutoffDate.Declare
	V.Local.sPart.Declare
	V.Local.sActiveFilterString.Declare
	
	''Gui.frmXStatus.lblStatus.Visible(True)
	'Gui.frmXStatus.pbStatus.Visible(True)
	'Gui.frmXStatus.pbStatus.Min(0)
	'Gui.frmXStatus.pbStatus.Max(100)
	
'	F.Intrinsic.Control.If(V.Global.bLoadDate)
'		F.Intrinsic.Control.CallSub(Serialize)
'	F.Intrinsic.Control.EndIf
'	V.Global.bLoadDate.Set(True)
	
	F.Intrinsic.Control.If(V.DataTable.dtXStatus.Exists)
		F.Data.DataTable.Close("dtXStatus")
		F.Data.DataTable.Close("dtAddlInfo")
		F.Data.DataTable.Close("dtNew")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(1,=,0)
		F.Data.DataTable.CreateFromSQL("dtXStatus","con","Select '' As Plus,'' As DocCntrl,A.Part+A.Location As PartLoc,RTrim(A.Part) As Part,A.Location, rtrim(Description_2) as 'Description_2', RTrim(A.Description) As Description,RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc,RTrim(D.Text) As ExtraDesc,RTrim(A.Product_Line) As Product_Line,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,RTrim(A.Code_Sort) As Code_Sort,RTrim(A.Bin) As Bin,A.Code_ABC,Cast(Null As Date) As Date_History,A.Qty_OnHand,A.Qty_Reorder,A.Qty_OnOrder_PO+A.Qty_OnOrder_WO As OnOrder,A.Qty_Required,A.Qty_Usage_Mo_01+A.Qty_Usage_Mo_02+A.Qty_Usage_Mo_03+A.Qty_Usage_Mo_04+A.Qty_Usage_Mo_05+A.Qty_Usage_Mo_06+A.Qty_Usage_Mo_07+A.Qty_Usage_Mo_08+A.Qty_Usage_Mo_09+A.Qty_Usage_Mo_10+A.Qty_Usage_Mo_11+A.Qty_Usage_Mo_12 As Usage_Last_12_Mos,A.Amt_Price, a.AMT_ALT_COST, C.Cost, C.Matl, C.Labor, C.Ovhd, C.Outs, C.Freight, C.Oth,A.Qty_OnHand*A.Amt_Price As Ext_Price,A.Qty_OnHand*C.Cost As Ext_Cost,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2 From V_Inventory_Mstr A Left Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Left Join V_Inventory_Cost C On A.Part = C.Part And A.Location = C.Locn Left Join V_Inv_Extra_Text D On A.Part = D.Part Order By A.Part,A.Location;",True)
		'Gui.frmXStatus.pbStatus.Value(50)
	F.Intrinsic.Control.Else
		V.Local.dCutoffDate.Set(V.Screen.frmInventoryReportingDashboard!dtp_InvDetail.Value)
		'Find Part+Loc with data after the Cutoff
		F.Intrinsic.String.Build("Select Distinct Part+Location From V_Inventory_Hist Where Date_History > '{0}' And Part <> '' And SubString(Part,17,1) <> '*' Order By Part,Location;",V.Local.dCutoffDate.PervasiveDate,V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sPart)
		F.Intrinsic.String.Replace(V.Local.sPart,"'","''",V.Local.sPart)
		F.Intrinsic.String.Replace(V.Local.sPart,"#$#","','",V.Local.sPart)
		'Gui.frmXStatus.pbStatus.Value(5)
		'Get information for the Part+Loc above
		F.Intrinsic.String.Build("Select Distinct '' As Plus,'' As DocCntrl,A.Part+A.Location As PartLoc,RTrim(A.Part) As Part,A.Location,  rtrim(Description_2) as 'Description_2', RTrim(A.Description) As Description,RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc,RTrim(D.Text) As ExtraDesc,RTrim(A.Product_Line) As Product_Line,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,RTrim(A.Code_Sort) As Code_Sort,RTrim(A.Bin) As Bin,A.Code_ABC,Cast(Null As Date) As Date_History,Cast(0 As Numeric(12,4)) As Qty_OnHand,Cast(0 As Numeric(12,4)) As Qty_Reorder,Cast(0 As Numeric(12,4)) As OnOrder,Cast(0 As Numeric(12,4)) As Qty_Required,Cast(0 As Numeric(12,4)) As Usage_Last_12_Mos,A.Amt_Price As Amt_Price,Cast(0 As Numeric(12,4)) As Cost,Cast(0 As Numeric(12,4)) As Matl,Cast(0 As Numeric(12,4)) As Labor,Cast(0 As Numeric(12,4)) As Ovhd,Cast(0 As Numeric(12,4)) As Outs,Cast(0 As Numeric(12,4)) As Freight,Cast(0 As Numeric(12,4)) As Oth,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2 From V_Inventory_Mstr A Left Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Left Join V_Inventory_Hist C On A.Part = C.Part And A.Location = C.Location Left Join V_Inv_Extra_Text D On A.Part = D.Part Where C.Date_History <= '{0}' And A.Part+A.Location In ('{1}') Order By A.Part,A.Location;",V.Local.dCutoffDate.PervasiveDate,V.Local.sPart,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtX1","con",V.Local.sSQL,True)
		'Gui.frmXStatus.pbStatus.Value(15)
		'Get Inv History information for the Part+Loc above
		F.Intrinsic.String.Build("Select Part+Location As PartLoc,Part,Location,Date_History,Inv_Hist_Time,New_OnHand,New_Inv_Cost,New_Matl,New_Labr,New_Ovhd,New_Outs,New_Frgt,New_Oth From V_Inventory_Hist Where Date_History <= '{0}' And Part+Location In ('{1}') Order By Part,Location,Date_Action Desc,Inv_Hist_Time Desc;",V.Local.dCutoffDate.PervasiveDate,V.Local.sPart,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtXdic","con",V.Local.sSQL,True)
		'Gui.frmXStatus.pbStatus.Value(20)
		'Date_History
		F.Data.Dictionary.CreateFromDataTable("dDateHistory","dtXdic","PartLoc","Date_History")
		F.Data.Dictionary.SetDefaultReturn("dDateHistory",1/1/1900)
		F.Data.DataTable.FillFromDictionary("dtX1","dDateHistory","PartLoc","Date_History")
		F.Data.Dictionary.Close("dDateHistory")
		'Gui.frmXStatus.pbStatus.Value(25)
		'Qty_OnHand
		F.Data.Dictionary.CreateFromDataTable("dNewOnHand","dtXdic","PartLoc","New_OnHand")
		F.Data.Dictionary.SetDefaultReturn("dNewOnHand",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOnHand","PartLoc","Qty_OnHand")
		F.Data.Dictionary.Close("dNewOnHand")
		'Gui.frmXStatus.pbStatus.Value(30)
		'Cost
		F.Data.Dictionary.CreateFromDataTable("dNewInvCost","dtXdic","PartLoc","New_Inv_Cost")
		F.Data.Dictionary.SetDefaultReturn("dNewInvCost",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewInvCost","PartLoc","Cost")
		F.Data.Dictionary.Close("dNewInvCost")
		'Gui.frmXStatus.pbStatus.Value(35)
		'Matl
		F.Data.Dictionary.CreateFromDataTable("dNewMatl","dtXdic","PartLoc","New_Matl")
		F.Data.Dictionary.SetDefaultReturn("dNewMatl",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewMatl","PartLoc","Matl")
		F.Data.Dictionary.Close("dNewMatl")
		'Gui.frmXStatus.pbStatus.Value(40)
		'Labor
		F.Data.Dictionary.CreateFromDataTable("dNewLabr","dtXdic","PartLoc","New_Labr")
		F.Data.Dictionary.SetDefaultReturn("dNewLabr",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewLabr","PartLoc","Labor")
		F.Data.Dictionary.Close("dNewLabr")
		'Gui.frmXStatus.pbStatus.Value(45)
		'Ovhd
		F.Data.Dictionary.CreateFromDataTable("dNewOvhd","dtXdic","PartLoc","New_Ovhd")
		F.Data.Dictionary.SetDefaultReturn("dNewOvhd",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOvhd","PartLoc","Ovhd")
		F.Data.Dictionary.Close("dNewOvhd")
		'Gui.frmXStatus.pbStatus.Value(50)
		'Outs
		F.Data.Dictionary.CreateFromDataTable("dNewOuts","dtXdic","PartLoc","New_Outs")
		F.Data.Dictionary.SetDefaultReturn("dNewOuts",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOuts","PartLoc","Outs")
		F.Data.Dictionary.Close("dNewOuts")
		'Gui.frmXStatus.pbStatus.Value(55)
		'Freight
		F.Data.Dictionary.CreateFromDataTable("dNewFrgt","dtXdic","PartLoc","New_Frgt")
		F.Data.Dictionary.SetDefaultReturn("dNewFrgt",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewFrgt","PartLoc","Freight")
		F.Data.Dictionary.Close("dNewFrgt")
		'Gui.frmXStatus.pbStatus.Value(60)
		'Oth
		F.Data.Dictionary.CreateFromDataTable("dNewOth","dtXdic","PartLoc","New_Oth")
		F.Data.Dictionary.SetDefaultReturn("dNewOth",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOth","PartLoc","Oth")
		F.Data.Dictionary.Close("dNewOth")
		'Gui.frmXStatus.pbStatus.Value(65)
		'Ext_Price
		F.Data.DataTable.AddExpressionColumn("dtX1","Ext_Price",Float,"Qty_OnHand*Amt_Price")
		'Gui.frmXStatus.pbStatus.Value(70)
		'Ext_Cost
		F.Data.DataTable.AddExpressionColumn("dtX1","Ext_Cost",Float,"Qty_OnHand*Cost")
		'Gui.frmXStatus.pbStatus.Value(75)
		'Get Inventory Master information for parts not listed in the Part+Loc above
		F.Intrinsic.String.Build("Select '' As Plus,'' As DocCntrl,A.Part+A.Location As PartLoc,RTrim(A.Part) As Part,A.Location,RTrim(A.Description) As Description, rtrim(Description_2) as 'Description_2', RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc, RTrim(D.Text) As ExtraDesc,RTrim(A.Product_Line) As Product_Line,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,RTrim(A.Code_Sort) As Code_Sort,RTrim(A.Bin) As Bin,A.Code_ABC,Cast(Null As Date) As Date_History,A.Qty_OnHand As Qty_OnHand,A.Qty_Reorder As Qty_Reorder,A.Qty_OnOrder_PO+A.Qty_OnOrder_WO As OnOrder,A.Qty_Required As Qty_Required,A.Qty_Usage_Mo_01+A.Qty_Usage_Mo_02+A.Qty_Usage_Mo_03+A.Qty_Usage_Mo_04+A.Qty_Usage_Mo_05+A.Qty_Usage_Mo_06+A.Qty_Usage_Mo_07+A.Qty_Usage_Mo_08+A.Qty_Usage_Mo_09+A.Qty_Usage_Mo_10+A.Qty_Usage_Mo_11+A.Qty_Usage_Mo_12 As Usage_Last_12_Mos,A.Amt_Price As Amt_Price, C.Cost As Cost,C.Matl As Matl, C.Labor As Labor, C.Ovhd As Ovhd, C.Outs As Outs, C.Freight As Freight, C.Oth As Oth,Cast(A.Qty_OnHand*A.Amt_Price As Float) As Ext_Price,Cast(A.Qty_OnHand*C.Cost As Float) As Ext_Cost,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2 From V_Inventory_Mstr A Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Join V_Inventory_Cost C On A.Part = C.Part And A.Location = C.Locn Left Join V_Inv_Extra_Text D On A.Part = D.Part Where A.Part+A.Location Not In ('{0}') Order By A.Part,A.Location;",V.Local.sPart,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtXStatus","con",V.Local.sSQL,True)
		'Gui.frmXStatus.pbStatus.Value(80)
		'Merge dtX1 and dtXStatus
		F.Data.DataTable.Merge("dtX1","dtXStatus",True,3)
		F.Data.DataTable.Close("dtX1")
		F.Data.DataTable.Close("dtXdic")
	F.Intrinsic.Control.EndIf 
	
	'Pull and add additional information information
	F.Data.DataTable.CreateFromSQL("dtAddlInfo","con","Select RTrim(Part) As Part,RTrim(Location) As Location,UM_Purchasing,Factor_Conversion As PurchConvFactor,Consump_Conv As CompsConvFactor,Qty_Safety,Qty_OnOrder_PO,Qty_OnOrder_WO,LBS As Weight,Length,Width,Density_Raw_Matl As Density,Thickness,Code_Rm_Shape As Shape,Wt_Per_Foot,Requires_Insp,HM_Flag As HazMatlFlag,Tax_Exempt_Flg,Case When Part_Create_Date = '1900-01-01' Then Null Else Part_Create_Date End As Part_Create_Date,Part_Create_User,Qty_Order From V_Inventory_All Order By Part,Location;",True)
	
	F.Data.Linq.Join("Leftjoin","DataTable","dtXStatus*!*XS","DataTable","dtAddlInfo*!*AI","XS.Part=AI.Part and XS.Location=AI.Location","XS.Part*!*XS.Location*!*XS.Description*!*XS.ExtraDesc*!*XS.Product_Line*!*XS.Code_Source*!*XS.UM_Inventory*!*XS.Code_Sort*!*XS.Bin*!*XS.Date_History*!*XS.Qty_OnHand*!*XS.Cost*!*XS.Ext_Cost*!*XS.Matl*!*XS.Labor*!*XS.Ovhd*!*XS.Outs*!*XS.Name_Vendor","","","XS.Part","dtNew",True)
	
	'Cross Reference (XRef)
'		F.Data.DataTable.AddColumn("dtNew","XRef",Boolean,False)
'		F.Data.Dictionary.CreateFromSQL("dXRef","con","Select Part+Location As PartLoc,Cast(1 As Bit) As XRef From V_Inv_Cross_Ref Where Customer <> '' Or Customer_Part <> '' Or Vendor <> '' Or Mfg_Part <> '';")
'		F.Data.Dictionary.SetDefaultReturn("dXRef",False)
'		F.Data.DataTable.FillFromDictionary("dtNew","dXRef","PartLoc","XRef")
'		F.Data.Dictionary.Close("dXRef")
'	
'	'Inventory Status
'	'InTransit
'		F.Data.DataTable.AddColumn("dtNew","InTransit",Float,0)
'		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+From_Location As PartLoc,Sum(Qty_Transfer) As Qty_Transfer From V_Inv_In_Transit Where Qty_Transfer <> 0 Group By Part,From_Location;")
'		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
'		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","InTransit")
'		F.Data.Dictionary.Close("dInvStat")
'	'InInspection
'		F.Data.DataTable.AddColumn("dtNew","InInspection",Float,0)
'		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location As PartLoc,Sum(Qty_Recd_Not_Insp) As Qty_Recd_Not_Insp From V_PO_Lines Where Flag_Recv_Close <> 'Y' And Qty_Recd_Not_Insp <> 0 Group By Part,Location;")
'		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
'		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","InInspection")
'		F.Data.Dictionary.Close("dInvStat")
'	'InQuality
'		F.Data.DataTable.AddColumn("dtNew","InQuality",Float,0)
'		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location As PartLoc,Sum(Qty_Remaining) As Qty_Remaining From V_Quality Where Qty_Remaining <> 0 Group By Part,Location;")
'		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
'		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","InQuality")
'		F.Data.Dictionary.Close("dInvStat")
'	'Consigned
'		F.Data.DataTable.AddColumn("dtNew","Consigned",Float,0)
'		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location as PartLoc,Sum(Quantity) As Quantity From V_Item_Master Where Allocated = 'G' Group By Part,Location;")
'		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
'		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","Consigned")
'		F.Data.Dictionary.Close("dInvStat")
'	'Allocated
'		F.Data.DataTable.AddColumn("dtNew","Allocated",Float,0)
'		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location as PartLoc,Sum(Quantity) As Quantity From V_Item_Master Where Allocated = 'Y' Group By Part,Location;")
'		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
'		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","Allocated")
'		F.Data.Dictionary.Close("dInvStat")
'	'Net
'		F.Data.DataTable.AddExpressionColumn("dtNew","Net",Float,"([Qty_OnHand]+[Qty_OnOrder_PO]+[Qty_OnOrder_WO])-[Qty_Required]")
'	'TotalQuantity
'		F.Data.DataTable.AddExpressionColumn("dtNew","TotalQuantity",Float,"[Qty_OnHand]+[Qty_OnOrder_PO]+[Qty_OnOrder_WO]")
'	'Set Doc Control Column
'		F.Data.DataTable.SetValue("dtNew",-1,"DocCntrl","DCS-OFF")
'		F.Data.Dictionary.CreateFromSQL("dDCC","con","Select RTrim(ID) As Part,'DCS-ON' As DCC From Link_Data Where Type = '00030'")
'		F.Data.Dictionary.SetDefaultReturn("dDCC","DCS-OFF")
'		F.Data.DataTable.FillFromDictionary("dtNew","dDCC","Part","DocCntrl")
'		F.Data.Dictionary.Close("dDCC")
	
	
	
	'GCG_6771 
	'fill fields from dicts
	'	DO_NOT_CALC_ABC
	'	DATE_CYCLE
	'	DATE_LAST_USAGE
	'	DATE_LAST_AUDIT
	'------------------------------------------------------------
	'DATE_LAST_USAGE
	'--------------------------
'	f.Data.Datatable.AddColumn("dtNew", "DATE_LAST_USAGE", "Date")
'	v.Local.sSQL.Set("select Part+Location as PartLoc, case when DATE_LAST_USAGE > '2000-01-01' then DATE_LAST_USAGE else NULL end from V_INVENTORY_MSTR")
'	f.Data.Dictionary.CreateFromSQL("dictTempFill", "con", v.Local.sSQL)
'	f.Data.Dictionary.SetDefaultReturn("dictTempFill", "")
'	f.Data.Datatable.FillFromDictionary("dtNew", "dictTempFill", "PartLoc", "DATE_LAST_USAGE")
'	f.Data.Dictionary.Close("dictTempFill")
'	'--------------------------
'	
'	'DATE_LAST_AUDIT
'	'--------------------------
'	f.Data.Datatable.AddColumn("dtNew", "DATE_LAST_AUDIT", "Date")
'	v.Local.sSQL.Set("select Part+Location as PartLoc, case when DATE_LAST_AUDIT > '2000-01-01' then DATE_LAST_AUDIT else NULL end  from V_INVENTORY_MSTR")
'	f.Data.Dictionary.CreateFromSQL("dictTempFill", "con", v.Local.sSQL)
'	f.Data.Dictionary.SetDefaultReturn("dictTempFill", "")
'	f.Data.Datatable.FillFromDictionary("dtNew", "dictTempFill", "PartLoc", "DATE_LAST_AUDIT")
'	f.Data.Dictionary.Close("dictTempFill")
'	'--------------------------
'	
'	'DATE_CYCLE
'	'--------------------------
'	f.Data.Datatable.AddColumn("dtNew", "DATE_CYCLE", "Date")
'	v.Local.sSQL.Set("select Part+Location as PartLoc, case when DATE_CYCLE > '2000-01-01' then DATE_CYCLE else NULL end  from V_INVENTORY_MST2")
'	f.Data.Dictionary.CreateFromSQL("dictTempFill", "con", v.Local.sSQL)
'	f.Data.Dictionary.SetDefaultReturn("dictTempFill", "")
'	f.Data.Datatable.FillFromDictionary("dtNew", "dictTempFill", "PartLoc", "DATE_CYCLE")
'	f.Data.Dictionary.Close("dictTempFill")
'	'--------------------------
'	
'	'DO_NOT_CALC_ABC
'	'--------------------------
'	f.Data.Datatable.AddColumn("dtNew", "DO_NOT_CALC_ABC", "Boolean")
'	v.Local.sSQL.Set("select Part+Location as PartLoc, case when DO_NOT_CALC_ABC = 'Y' then 1 else 0 end from V_INVENTORY_MST3")
'	f.Data.Dictionary.CreateFromSQL("dictTempFill", "con", v.Local.sSQL)
'	f.Data.Dictionary.SetDefaultReturn("dictTempFill", 0)
'	f.Data.Datatable.FillFromDictionary("dtNew", "dictTempFill", "PartLoc", "DO_NOT_CALC_ABC")
'	f.Data.Dictionary.Close("dictTempFill")
'	'--------------------------
'	'------------------------------------------------------------
'	
'	
'	'Remove Key Column
'	F.Data.DataTable.RemoveColumn("dtNew","PartLoc")
'	
'	'Create XRef Subtable
'	F.Data.DataTable.CreateFromSQL("dtNew$dtXRef","con","Select RTrim(Part) As Part,Location As Location,RTrim(A.Customer) As Customer,RTrim(B.Name_Customer) As Customer_Name,RTrim(Customer_Part) As Customer_Part,RTrim(Vendor) As Vendor,RTrim(Mfg_Name) As Mfg_Name,RTrim(Mfg_Part) As Mfg_Part,RTrim(Status) As Status,RTrim(User_Defined_Part) As User_Defined_Part,RTrim(Comment) As Comment From V_Inv_Cross_Ref A Left Join V_Customer_Master B On A.Customer = B.Customer Where A.Customer <> '' Or Customer_Part <> '' Or Vendor <> '' Or Mfg_Part <> '';",True)
	
	'AddRelation
	'F.Data.DataTable.AddRelation("dtNew","Part*!*Location","dtNew$dtXRef","Part*!*Location","XRef")
	
	''Gui.frmXStatus.pbStatus.Value(90)
	'F.Intrinsic.Control.CallSub(LoadGvXStatus)
	'F.Intrinsic.Control.CallSub(Deserialize)
	'Gui.frmXStatus.pbStatus.Value(100)
	'Gui.frmXStatus.lblStatus.Visible(False)
	'Gui.frmXStatus.pbStatus.Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDtXStatus.End

Program.Sub.LoadWIP.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iProgress.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.fEstHrs.Declare
	V.Local.fRemHrs.Declare
	V.Local.fPcsRem.Declare
	V.Local.sDept.Declare
	V.Local.sCurOper.Declare
	V.Local.dCurOperDate.Declare
	V.Local.sNextOper.Declare
	V.Local.sOutside.Declare
	V.Local.dShipDate.Declare
	V.Local.dDateCheck.Declare(Date,01/01/1900)
	V.Local.bDictExists.Declare

	F.Intrinsic.Control.If(V.DataTable.dtAll.Exists,=,True)
		F.Data.DataTable.Close("dtAll")
		F.Data.DataTable.Close("dtAll2")
	F.Intrinsic.Control.EndIf

	F.Data.Dictionary.Exists("dIndirect",V.Local.bDictExists)
	F.Intrinsic.Control.If(V.Local.bDictExists,=,True)
		F.Data.Dictionary.Close("dIndirect")
	F.Intrinsic.Control.EndIf
	
	'V.Global.bLoadData.Set(True)
	
	F.Data.Dictionary.CreateFromSQL("dIndirect","con","SELECT DISTINCT CONCAT(JOB,SUFFIX) AS JS,CONVERT(IF('' = '',1,0),SQL_BIT) FROM IND_LBR_ACCTS;")
	F.Data.Dictionary.SetDefaultReturn("dIndirect",False)

	F.Data.DataTable.CreateFromSQL("dtAll","con","SELECT VJH.JOB,VJH.SUFFIX, COALESCE(VJH.PART,'') AS PART, VJH.PART_DESCRIPTION AS DESCRIPTION, DATE_DUE,VJH.AMT_MATERIAL+VJH.PARTIAL_MATERIAL AS MATERIAL,VJH.AMT_LABOR+VJH.PARTIAL_LABOR AS LABOR,VJH.OUTS+VJH.PARTIAL_OUTSIDE AS OUTSIDE_PROCESS,VJH.AMT_OVERHEAD+VJH.PARTIAL_OVERHEAD AS OVERHEAD,VJH.OTHER+VJH.PARTIAL_OTHER AS OTHER,VJH.FREIGHT+VJH.AMT_MATERIAL+VJH.AMT_LABOR+VJH.OUTS+VJH.AMT_OVERHEAD+VJH.OTHER+VJH.PARTIAL_FREIGHT+VJH.PARTIAL_MATERIAL+VJH.PARTIAL_LABOR+VJH.PARTIAL_OUTSIDE+VJH.PARTIAL_OVERHEAD+VJH.PARTIAL_OTHER AS WIP, VIA.AMT_PRICE*(VJH.QTY_ORDER - VJH.QTY_COMPLETED) as SALES_VALUE, VJH.AMT_PARTIAL_SHPMNT, CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CONVERT(0,SQL_BIT) AS IND_FLAG FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN V_ORDER_TO_WO OWO ON VJH.JOB = OWO.JOB AND VJH.SUFFIX = OWO.SUFFIX LEFT JOIN V_ORDER_LINES VOL ON OWO.ORDER_NO = VOL.ORDER_NO AND OWO.ORDER_LINE = VOL.RECORD_NO LEFT JOIN V_ORDER_BILL_TO VOB ON VOL.ORDER_NO = VOB.ORDER_NO LEFT JOIN V_INVENTORY_ALL VIA ON VJH.PART = VIA.PART AND VJH.LOCATION = VIA.LOCATION WHERE DATE_CLOSED = '1900-1-1'  ORDER BY VJH.JOB;",True)
	
	'Long Part
'	f.Intrinsic.Control.If(v.Global.bLongPart)
'		F.Data.DataTable.AddDisplayPartColumn("dtAll",0,"PART","DISPLAY_PART")
'	f.Intrinsic.Control.Else
'		F.Data.DataTable.CopyColumn("dtAll","PART","DISPLAY_PART")
'	f.Intrinsic.Control.EndIf
		
	'Multi-Part
'	F.Data.DataTable.AddColumn("dtAll","Multi",Boolean,False)
'	F.Data.Dictionary.CreateFromSQL("dMulti","con","Select Concat(Job,Suffix),Cast(1 As Bit) From Job_Mult_Parts;")
'	F.Data.Dictionary.SetDefaultReturn("dMulti",False)
'	F.Data.DataTable.FillFromDictionary("dtAll","dMulti","JS","Multi")
'	F.Data.Dictionary.Close("dMulti")

	'Gui.FrmMaster.lblStatus.Visible(True)
	'Gui.FrmMaster.pbStatus.Visible(True)
	'Gui.FrmMaster.lblStatus.ForeColor(V.Color.Black)
	'Gui.FrmMaster.lblStatus.FontSize(8)
	'Gui.FrmMaster.lblStatus.Caption("Loading Work Orders....")
	'Gui.FrmMaster.pbStatus.Min(0)
	'Gui.FrmMaster.pbStatus.Max(V.DataTable.dtAll.RowCount)

'	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAll.RowCount--,1)
'		F.Intrinsic.Math.Add(V.Local.iProgress,1,V.Local.iProgress)
'		'Gui.FrmMaster.pbStatus.Value(V.Local.iProgress)
'		V.Local.sJob.Set(V.DataTable.dtAll(V.Local.iCnt).JOB!FieldVal)
'		V.Local.sSuffix.Set(V.DataTable.dtAll(V.Local.iCnt).SUFFIX!FieldVal)
'		F.Intrinsic.String.Build("SELECT TOP 2 A.JOB,A.SFX,A.SEQ,A.SEQTYPE,A.SEQRES,A.PCSREMAIN,A.STARTDATE,IF(WORK_GROUP <> '',D.WC_DEPT,B.WC_DEPT) AS DEPT FROM APSV3_JBLINES A LEFT JOIN WORKCENTERS B ON A.SEQRES = B.MACHINE LEFT JOIN WORKGROUP_HEAD C ON A.SEQRES = C.WORK_GROUP LEFT JOIN WORKCENTERS D ON C.PROTOTYPE_WC = D.MACHINE WHERE A.COMPLDATE IS NULL AND A.SEQTYPE <> '2' AND A.JOB = '{0}' AND A.SFX = '{1}' ORDER BY A.JOB,A.SFX,A.SEQ;",V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
'		F.ODBC.Connection!con.OpenLocalRecordsetRO("rstInfo",V.Local.sSQL)
'			V.Local.sDept.Set("")
'			V.Local.sCurOper.Set("")
'			V.Local.dCurOperDate.Set(01/01/1900)
'			V.Local.sNextOper.Set("")
'			V.Local.sOutside.Set("")
'			V.Local.dShipDate.Set(01/01/1900)
'			F.Intrinsic.Control.If(V.ODBC.con!rstInfo.EOF,=,True)
'				V.Local.sCurOper.Set("WIPTOFG")
'				V.Local.fPcsRem.Set(0)
'				V.Local.sNextOper.Set("")
'				V.Local.sDept.Set("")
'			F.Intrinsic.Control.Else
'				F.Intrinsic.Control.DoUntil(V.ODBC.con!rstInfo.EOF,=,True)
'					F.Intrinsic.Control.SelectCase(V.ODBC.con!rstInfo.FieldValTrim!SEQTYPE)
'						F.Intrinsic.Control.Case(1)
'							F.Intrinsic.Control.If(V.Local.sCurOper,=,"")
'								V.Local.sDept.Set(V.ODBC.con!rstInfo.FieldValTrim!DEPT)
'								V.Local.sCurOper.Set(V.ODBC.con!rstInfo.FieldValTrim!SEQRES)
'									F.Intrinsic.Control.If(V.ODBC.con!rstInfo.FieldVal!STARTDATE,=,"")
'										V.Local.dCurOperDate.Set(01/01/1900)
'									F.Intrinsic.Control.Else
'										V.Local.dCurOperDate.Set(V.ODBC.con!rstInfo.FieldVal!STARTDATE)
'									F.Intrinsic.Control.EndIf
'								V.Local.fPcsRem.Set(V.ODBC.con!rstInfo.FieldValFloat!PCSREMAIN)
'							F.Intrinsic.Control.Else
'								V.Local.sNextOper.Set(V.ODBC.con!rstInfo.FieldValTrim!SEQRES)
'								V.Local.fPcsRem.Set(V.ODBC.con!rstInfo.FieldValFloat!PCSREMAIN)
'							F.Intrinsic.Control.EndIf
'						F.Intrinsic.Control.Case(3)
'							F.Intrinsic.Control.If(V.Local.sCurOper,=,"")
'								V.Local.sDept.Set("")
'								V.Local.sCurOper.Set("OUTSIDE")
'								F.Intrinsic.Control.If(V.ODBC.con!rstInfo.FieldVal!STARTDATE,=,"")
'									V.Local.dCurOperDate.Set(01/01/1900)
'								F.Intrinsic.Control.Else
'									V.Local.dCurOperDate.Set(V.ODBC.con!rstInfo.FieldVal!STARTDATE)
'								F.Intrinsic.Control.EndIf
'								V.Local.fPcsRem.Set(V.ODBC.con!rstInfo.FieldValFloat!PCSREMAIN)
'							F.Intrinsic.Control.Else
'								F.Intrinsic.Control.If(V.Local.sOutside,=,"")
'									V.Local.sNextOper.Set("OUTSIDE")
'								F.Intrinsic.Control.Else
'									V.Local.sNextOper.Set("OUTSIDE")
'								F.Intrinsic.Control.EndIf
'							F.Intrinsic.Control.EndIf
'					F.Intrinsic.Control.EndSelect
'				F.ODBC.con!rstInfo.MoveNext
'				F.Intrinsic.Control.Loop
'			F.Intrinsic.Control.EndIf
'		F.ODBC.con!rstInfo.Close

'		F.Intrinsic.String.Build("SELECT TOP 1 SEQRES,STARTDATE FROM APSV3_JBLINES WHERE SEQTYPE = '3' AND JOB = '{0}' AND SFX = '{1}' AND COMPLDATE IS NULL ORDER BY SEQ;",V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
'		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sOutside)
'		F.Intrinsic.String.Split(V.Local.sOutside,"*!*",V.Local.sOutside)
'		F.Intrinsic.Control.If(V.Local.sOutside(1),=,"OOB",OR,V.Local.sOutside(1),=,"")
'			V.Local.dShipDate.Set(01/01/1900)
'		F.Intrinsic.Control.Else
'			V.Local.dShipDate.Set(V.Local.sOutside(1))
'		F.Intrinsic.Control.EndIf
'		V.Local.sOutside.Set(V.Local.sOutside(0))

'		F.Intrinsic.String.Build("SELECT CONVERT(SUM(HOURSORIG+INITSU),SQL_NUMERIC) AS EST_HRS FROM APSV3_JBLINES WHERE SEQTYPE = '1' AND JOB = '{0}' AND SFX = '{1}' GROUP BY JOB,SFX;",V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
'		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.fEstHrs)

'		F.Intrinsic.Control.If(V.Local.fEstHrs,=,0)
'			V.Local.fEstHrs.Set(0.00)
'			V.Local.fRemHrs.Set(0.00)
'		F.Intrinsic.Control.Else
'			F.Intrinsic.Math.Sub(V.Local.fEstHrs,V.DataTable.dtAll(V.Local.iCnt).ACT_HRS!FieldValFloat,V.Local.fRemHrs)
'		F.Intrinsic.Control.EndIf

'		F.Intrinsic.Control.If(V.Local.dCurOperDate,=,V.Local.dDateCheck)
'		F.Intrinsic.Control.AndIf(V.Local.dShipDate,=,V.Local.dDateCheck)
'			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem)		
'		F.Intrinsic.Control.ElseIf(V.Local.dCurOperDate,=,V.Local.dDateCheck)
'			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"SHIP_TO_OP",V.Local.dShipDate,"PCS_REM",V.Local.fPcsRem)
'		F.Intrinsic.Control.ElseIf(V.Local.dShipDate,=,V.Local.dDateCheck)
'			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"CUR_OPER_DATE",V.Local.dCurOperDate,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem)
'		F.Intrinsic.Control.Else
'			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"CUR_OPER_DATE",V.Local.dCurOperDate,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"SHIP_TO_OP",V.Local.dShipDate,"PCS_REM",V.Local.fPcsRem)
'		F.Intrinsic.Control.EndIf
'		
'		F.Intrinsic.Control.If(V.DataTable.dtAll(V.Local.iCnt).Multi!FieldVal)
'			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"PART","MULTI-PART","DISPLAY_PART","MULTI-PART")
'		F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Data.DataTable.FillFromDictionary("dtAll","dIndirect","JS","IND_FLAG")
	'F.Data.DataTable.RemoveColumn("dtAll","Multi")
	F.Data.DataView.Create("dtAll","dvAll",22,"IND_FLAG <> True","DATE_DUE ASC")
	F.Data.DataView.ToDataTable("dtAll","dvAll","dtAll2",True)

	'Function.Intrinsic.Control.CallSub(loadgvall)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry

Program.Sub.LoadWIP.End

Program.Sub.Comments.Start
${$5$}$20.1.8328.25015$}$1
${$6$}$Globalshop$}$20221201154839475$}$XbGA5Jlbk/pa9e8jvNC+5gB1AWnpDTHqi6JZpvXQRTrshT/K/f12EJeotSAOoM9646ufYjeKW2X3yrWPTdiQQg==
Program.Sub.Comments.End